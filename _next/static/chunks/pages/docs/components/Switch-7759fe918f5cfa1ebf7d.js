(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[6343],{67:function(t,e,n){"use strict";n.r(e),n.d(e,{default:function(){return T},meta:function(){return v}});var l=n(6265),o=n(8140),u=n(8347),i=n(7294),d=n(3905),r=n(785),a=n(7703),c=n(9387),s=n(3161),k=n(5893),h=n(2292),p=n(7913),m=n(3910),b=function(){var t=i.useState(!1),e=(0,h.Z)(t,2),n=e[0],l=e[1];return(0,k.jsx)(m.Z,{flexDirection:"column",code:'import Switch from "@sonnat/ui/Switch";\nimport Button from "@sonnat/ui/Button";\nimport * as React from "react";\n\nconst Demo: React.FC = () => {\n  const [checked, setChecked] = React.useState(false);\n\n  return (\n    <React.Fragment>\n      <Button\n        variant="outlined"\n        size="small"\n        label="Toggle the Switch"\n        onClick={() => void setChecked(c => !c)}\n      />\n      <Switch\n        label="Label"\n        checked={checked}\n        inputProps={{ id: "sw-box-2" }}\n        onChange={() => void setChecked(c => !c)}\n      />\n    </React.Fragment>\n  );\n};\n\nexport default Demo;\n',children:(0,k.jsxs)(i.Fragment,{children:[(0,k.jsx)(p.Z,{variant:"outlined",size:"small",label:"Toggle the Switch",onClick:function(){l((function(t){return!t}))}}),(0,k.jsx)(r.Z,{label:"Label",checked:n,inputProps:{id:"sw-box-2"},onChange:function(){l((function(t){return!t}))}})]})})};b.displayName="SwitchControlledDemo";var f=b,w=n(9008),C=n(3257),y=n(1919);function g(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(t);e&&(l=l.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,l)}return n}function S(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?g(Object(n),!0).forEach((function(e){(0,l.Z)(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):g(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}var v={title:"Switch",description:"Switches are used for switching between two states or an on-off state.",getLayout:function(){return function(t){return(0,d.kt)(s.Z,{mdxType:"WithSidebar"},t)}}},x={meta:v};function T(t){var e=t.components,n=(0,u.Z)(t,["components"]);return(0,d.kt)("wrapper",S(S(S({},x),n),{},{components:e,mdxType:"MDXLayout"}),(0,d.kt)(w.default,{mdxType:"Head"},(0,y.aT)("".concat(v.title," | Sonnat Developer Tools, React Components & Resources")),(0,y.u2)(v.description),(0,y.ai)("".concat(C.z,"/docs/components/").concat(v.title)),(0,y.hL)([].concat((0,o.Z)(C.t),["switch"]))),(0,d.kt)("h1",null,(0,d.kt)("span",null,v.title),(0,d.kt)(c.Z,{anchorId:"overview",mdxType:"AnchorButton"}),(0,d.kt)(a.Z,{href:"pages/docs/components/".concat(v.title,".mdx"),mdxType:"PageEditButton"})),(0,d.kt)("p",null,v.description),(0,d.kt)("h2",null,(0,d.kt)("span",null,"Example"),(0,d.kt)(c.Z,{anchorId:"example",mdxType:"AnchorButton"})),(0,d.kt)(m.Z,{code:'<Switch />\n<Switch disabled />\n<Switch defaultChecked disabled />\n<Switch inputProps={{ id: "sw-box-0" }} defaultChecked label="Label" />\n<Switch\n  inputProps={{ id: "sw-box-1" }}\n  defaultChecked\n  label="Label"\n  disabled\n/>',mdxType:"DemoBox"},(0,d.kt)("div",{className:"demoSubject"},(0,d.kt)(r.Z,{mdxType:"Switch"}),(0,d.kt)(r.Z,{disabled:!0,mdxType:"Switch"}),(0,d.kt)(r.Z,{defaultChecked:!0,disabled:!0,mdxType:"Switch"})),(0,d.kt)("div",{className:"demoSubject"},(0,d.kt)(r.Z,{inputProps:{id:"sw-box-0"},defaultChecked:!0,label:"Label",mdxType:"Switch"})),(0,d.kt)("div",{className:"demoSubject"},(0,d.kt)(r.Z,{inputProps:{id:"sw-box-1"},defaultChecked:!0,label:"Label",disabled:!0,mdxType:"Switch"}))),(0,d.kt)("h2",null,(0,d.kt)("span",null,"Controlled Switches"),(0,d.kt)(c.Z,{anchorId:"controlled-switches",mdxType:"AnchorButton"})),(0,d.kt)("p",null,"You can use the ",(0,d.kt)("inlineCode",null,"checked"),", and"," ",(0,d.kt)("inlineCode",null,"onChange")," properties to control the behaviour of the switch."),(0,d.kt)(f,{mdxType:"SwitchControlledDemo"}),(0,d.kt)("h2",null,(0,d.kt)("span",null,"API"),(0,d.kt)(c.Z,{anchorId:"api",mdxType:"AnchorButton"})),(0,d.kt)("p",null,"Learn more about the properties and the customization points."),(0,d.kt)("h3",null,(0,d.kt)("span",null,"Usage"),(0,d.kt)(c.Z,{anchorId:"usage",mdxType:"AnchorButton"})),(0,d.kt)("pre",null,(0,d.kt)("code",S({parentName:"pre"},{className:"language-typescript"}),'// recommended\nimport Switch from "@sonnat/ui/Switch";\n\n//or\nimport { Switch } from "@sonnat/ui";\n')),(0,d.kt)("h3",null,(0,d.kt)("span",null,"Properties"),(0,d.kt)(c.Z,{anchorId:"properties",mdxType:"AnchorButton"})),(0,d.kt)("p",null,"Note that the documentation avoids mentioning all the native props (there are a lot) in this section of the components."),(0,d.kt)("table",{cols:4},(0,d.kt)("caption",null,"Switch Properties"),(0,d.kt)("thead",null,(0,d.kt)("tr",null,(0,d.kt)("th",null,"Name"),(0,d.kt)("th",null,"Type"),(0,d.kt)("th",null,"Default"),(0,d.kt)("th",null,"Description"))),(0,d.kt)("tbody",null,(0,d.kt)("tr",null,(0,d.kt)("td",null,"className"),(0,d.kt)("td",null,"string"),(0,d.kt)("td",null,"-"),(0,d.kt)("td",null,"Append to the class names applied to the component so you can override or extend the styles.")),(0,d.kt)("tr",null,(0,d.kt)("td",null,"label"),(0,d.kt)("td",null,"string"),(0,d.kt)("td",null,"-"),(0,d.kt)("td",null,"If ",(0,d.kt)("inlineCode",null,"label")," was provided, a"," ",(0,d.kt)("inlineCode",null,"<label>")," element will be rendered next to the switch.")),(0,d.kt)("tr",null,(0,d.kt)("td",null,"name"),(0,d.kt)("td",null,"string"),(0,d.kt)("td",null,"-"),(0,d.kt)("td",null,"The name of the switch.")),(0,d.kt)("tr",null,(0,d.kt)("td",null,"value"),(0,d.kt)("td",null,"string"),(0,d.kt)("td",null,"-"),(0,d.kt)("td",null,"The value of the switch. The DOM API casts this to a string.",(0,d.kt)("br",null),"The browser uses ",(0,d.kt)("inlineCode",null,'"on"')," as the default value.")),(0,d.kt)("tr",null,(0,d.kt)("td",null,"size"),(0,d.kt)("td",null,'"medium"',(0,d.kt)("br",null),'| "small"'),(0,d.kt)("td",null,'"medium"'),(0,d.kt)("td",null,"The size of the switch.")),(0,d.kt)("tr",null,(0,d.kt)("td",null,"readOnly"),(0,d.kt)("td",null,"boolean"),(0,d.kt)("td",null,"false"),(0,d.kt)("td",null,"If ",(0,d.kt)("inlineCode",null,"true"),", the switch will be read-only.")),(0,d.kt)("tr",null,(0,d.kt)("td",null,"checked"),(0,d.kt)("td",null,"boolean"),(0,d.kt)("td",null,"-"),(0,d.kt)("td",null,"If ",(0,d.kt)("inlineCode",null,"true"),", the switch will be checked.")),(0,d.kt)("tr",null,(0,d.kt)("td",null,"defaultChecked"),(0,d.kt)("td",null,"boolean"),(0,d.kt)("td",null,"-"),(0,d.kt)("td",null,"The default state of ",(0,d.kt)("inlineCode",null,"checked"),". Use when the component is not controlled.")),(0,d.kt)("tr",null,(0,d.kt)("td",null,"disabled"),(0,d.kt)("td",null,"boolean"),(0,d.kt)("td",null,"false"),(0,d.kt)("td",null,"If ",(0,d.kt)("inlineCode",null,"true"),", the switch will be disabled.")),(0,d.kt)("tr",null,(0,d.kt)("td",null,"required"),(0,d.kt)("td",null,"boolean"),(0,d.kt)("td",null,"false"),(0,d.kt)("td",null,"If ",(0,d.kt)("inlineCode",null,"true"),", the switch will be required.")),(0,d.kt)("tr",null,(0,d.kt)("td",null,"hasError"),(0,d.kt)("td",null,"boolean"),(0,d.kt)("td",null,"false"),(0,d.kt)("td",null,"If ",(0,d.kt)("inlineCode",null,"true"),", the switch will indicate invalid input.")),(0,d.kt)("tr",null,(0,d.kt)("td",null,"inputProps"),(0,d.kt)("td",null,"object"),(0,d.kt)("td",null,"-"),(0,d.kt)("td",null,"The properties applied to the ",(0,d.kt)("inlineCode",null,"input")," element.")),(0,d.kt)("tr",null,(0,d.kt)("td",null,"labelProps"),(0,d.kt)("td",null,"object"),(0,d.kt)("td",null,"-"),(0,d.kt)("td",null,"The properties applied to the ",(0,d.kt)("inlineCode",null,"label")," element.")),(0,d.kt)("tr",null,(0,d.kt)("td",null,"onChange"),(0,d.kt)("td",null,"function"),(0,d.kt)("td",null,"-"),(0,d.kt)("td",null,"The Callback fires when the state has changed.",(0,d.kt)("br",null),(0,d.kt)("em",null,(0,d.kt)("strong",null,"Signature:"))," ",(0,d.kt)("inlineCode",null,"function(event: React.ChangeEvent, checkedState: boolean) => void"),(0,d.kt)("br",null),(0,d.kt)("em",null,(0,d.kt)("strong",null,"Note:"))," ","You can also pull out the new checked state by accessing"," ",(0,d.kt)("inlineCode",null,"event.target.checked")," (boolean)."))),(0,d.kt)("tfoot",null,(0,d.kt)("tr",null,(0,d.kt)("td",{colSpan:"4"},(0,d.kt)("ul",null,(0,d.kt)("li",null,"The ",(0,d.kt)("inlineCode",null,"ref")," is forwarded to the root element."),(0,d.kt)("li",null,"Any other properties supplied will be provided to the root element.")))))))}T.isMDXComponent=!0},4189:function(t,e,n){(window.__NEXT_P=window.__NEXT_P||[]).push(["/docs/components/Switch",function(){return n(67)}])}},function(t){t.O(0,[9774,3679,5070,5400,7428,5708,1254,2201,1635,7763,9701],(function(){return e=4189,t(t.s=e);var e}));var e=t.O();_N_E=e}]);