(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[51],{9531:function(t,e,n){"use strict";n.r(e),n.d(e,{default:function(){return S},meta:function(){return A}});var l=n(6265),o=n(8140),i=n(8347),r=n(7294),u=n(3905),a=n(3046),p=n(7703),c=n(9387),d=n(3161),s=n(5893),m=n(2292),k=n(5071),h=n(4425),T=n(77),f=n(9182),v=n(7305),x=n(3910),g=n(4184),y=n.n(g),b=(0,h.Z)((function(t){return{demoRow:{display:"flex","& + &":{marginTop:t.typography.pxToRem(40)}},placementControl:{alignItems:"center"}}}),{name:"TooltipPlacementDemo"}),w=function(){var t=b(),e=r.useState("top"),n=(0,m.Z)(e,2),l=n[0],o=n[1],i='<Tooltip\n  text="The informative text!"\n  placement="'.concat(l,'"\n  open={true}\n  tailed\n>\n  <div>Placement (').concat(l,")</div>\n</Tooltip>");return(0,s.jsxs)(x.Z,{code:i,flexDirection:"column",horizontalAlignment:"center",children:[(0,s.jsx)("div",{className:t.demoRow,children:(0,s.jsxs)(k.Z,{className:y()(t.placementControl,"demoSubject"),children:[(0,s.jsx)(T.Z,{htmlFor:"radiogroup-placement",children:"Placement"}),(0,s.jsxs)(f.Z,{title:"Tooltip's placement",id:"radiogroup-placement",defaultValue:"left",layoutDirection:"row",onChange:function(t){o(t.target.value)},children:[(0,s.jsx)(v.Z,{inputProps:{id:"radiogroup-placement-top"},label:"top",value:"top"}),(0,s.jsx)(v.Z,{inputProps:{id:"radiogroup-placement-left"},label:"left",value:"left"}),(0,s.jsx)(v.Z,{inputProps:{id:"radiogroup-placement-right"},label:"right",value:"right"}),(0,s.jsx)(v.Z,{inputProps:{id:"radiogroup-placement-bottom"},label:"bottom",value:"bottom"})]})]})}),(0,s.jsx)("div",{className:t.demoRow,children:(0,s.jsx)(a.Z,{text:"The informative text!",placement:l,tailed:!0,open:!0,children:(0,s.jsxs)("div",{children:["Placement (",l,")"]})})})]})};w.displayName="TooltipPlacementDemo";var Z=w,O=function(){var t=r.useState(!1),e=(0,m.Z)(t,2),n=e[0],l=e[1];return(0,s.jsx)(x.Z,{code:'import Tooltip from "@sonnat/ui/Tooltip";\nimport * as React from "react";\n\nconst TooltipControllingDemo: React.FC = () => {\n  const [isOpen, setOpen] = React.useState(false);\n\n  return (\n    <React.Fragment>\n      <Tooltip text="The informative text!" defaultOpen={true}>\n        <small>uncontrolled</small>\n      </Tooltip>\n      <Tooltip\n        text="The informative text!"\n        open={isOpen}\n        onOpen={() => void setOpen(true)}\n        onClose={() => void setOpen(false)}\n      >\n        <small>controlled</small>\n      </Tooltip>\n    </React.Fragment>\n  );\n};\n\nexport default TooltipControllingDemo;',children:(0,s.jsxs)(r.Fragment,{children:[(0,s.jsx)("div",{className:"demoSubject",children:(0,s.jsx)(a.Z,{text:"The informative text!",defaultOpen:!0,children:(0,s.jsx)("small",{children:"uncontrolled"})})}),(0,s.jsx)("div",{className:"demoSubject",children:(0,s.jsx)(a.Z,{text:"The informative text!",open:n,onOpen:function(){l(!0)},onClose:function(){l(!1)},children:(0,s.jsx)("small",{children:"controlled"})})})]})})};O.displayName="TooltipControllingDemo";var j=O,C=n(9008),P=n(3257),D=n(1919);function N(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(t);e&&(l=l.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,l)}return n}function I(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?N(Object(n),!0).forEach((function(e){(0,l.Z)(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):N(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}var A={title:"Tooltip",description:"Tooltips display informative text when users hover over, or tap an element.",getLayout:function(){return function(t){return(0,u.kt)(d.Z,{mdxType:"WithSidebar"},t)}}},B={meta:A};function S(t){var e=t.components,n=(0,i.Z)(t,["components"]);return(0,u.kt)("wrapper",I(I(I({},B),n),{},{components:e,mdxType:"MDXLayout"}),(0,u.kt)(C.default,{mdxType:"Head"},(0,D.aT)("".concat(A.title," | Sonnat Developer Tools, React Components & Resources")),(0,D.u2)(A.description),(0,D.ai)("".concat(P.z,"/docs/components/").concat(A.title)),(0,D.hL)([].concat((0,o.Z)(P.t),["tooltip","\u0631\u0627\u0647\u0646\u0645\u0627\u06cc \u0627\u0628\u0632\u0627\u0631"]))),(0,u.kt)("h1",null,(0,u.kt)("span",null,A.title),(0,u.kt)(c.Z,{anchorId:"overview",mdxType:"AnchorButton"}),(0,u.kt)(p.Z,{href:"pages/docs/components/".concat(A.title,".mdx"),mdxType:"PageEditButton"})),(0,u.kt)("p",null,A.description),(0,u.kt)("h2",null,(0,u.kt)("span",null,"Triggers on Hover"),(0,u.kt)(c.Z,{anchorId:"triggers-on-hover",mdxType:"AnchorButton"})),(0,u.kt)("p",null,"Displays the tooltip when users hover over the anchor element. This behaviour is the default behaviour of the tooltips."),(0,u.kt)(x.Z,{code:'<Tooltip text="The informative text!">\n  <div>Hover me!</div>\n</Tooltip>',mdxType:"DemoBox"},(0,u.kt)(a.Z,{text:"The informative text!",mdxType:"Tooltip"},(0,u.kt)("div",null,"Hover me!"))),(0,u.kt)("h2",null,(0,u.kt)("span",null,"Triggers on Click"),(0,u.kt)(c.Z,{anchorId:"triggers-on-click",mdxType:"AnchorButton"})),(0,u.kt)("p",null,"Displays the tooltip when users click on the anchor element."),(0,u.kt)(x.Z,{code:'<Tooltip text="The informative text!" triggersOn="click">\n  <div>Click me!</div>\n</Tooltip>',mdxType:"DemoBox"},(0,u.kt)(a.Z,{text:"The informative text!",triggersOn:"click",mdxType:"Tooltip"},(0,u.kt)("div",null,"Click me!"))),(0,u.kt)("h2",null,(0,u.kt)("span",null,"Triggers on MouseMove"),(0,u.kt)(c.Z,{anchorId:"triggers-on-mousemove",mdxType:"AnchorButton"})),(0,u.kt)("p",null,"When mouse enters the anchor element, the tooltip will be displayed and follows the cursor."),(0,u.kt)(x.Z,{code:'<Tooltip text="The informative text!" triggersOn="mouseMove">\n  <div>Tickle me!</div>\n</Tooltip>',mdxType:"DemoBox"},(0,u.kt)(a.Z,{text:"The informative text!",triggersOn:"mouseMove",mdxType:"Tooltip"},(0,u.kt)("div",{id:"tickle-anchor"},"Tickle me!"))),(0,u.kt)("h2",null,(0,u.kt)("span",null,"Arrow Tails"),(0,u.kt)(c.Z,{anchorId:"arrow-tails",mdxType:"AnchorButton"})),(0,u.kt)("p",null,"You can use the ",(0,u.kt)("inlineCode",null,"tailed")," property to give your tooltip an arrow tail indicating which element it refers to."),(0,u.kt)(x.Z,{code:'<Tooltip text="The informative text!" tailed>\n  <div>Tailed tooltip!</div>\n</Tooltip>',mdxType:"DemoBox"},(0,u.kt)(a.Z,{text:"The informative text!",tailed:!0,mdxType:"Tooltip"},(0,u.kt)("div",null,"Tailed tooltip!"))),(0,u.kt)("h2",null,(0,u.kt)("span",null,"Controlled Tooltips"),(0,u.kt)(c.Z,{anchorId:"controlled-tooltips",mdxType:"AnchorButton"})),(0,u.kt)("p",null,"You can use the ",(0,u.kt)("inlineCode",null,"open"),", ",(0,u.kt)("inlineCode",null,"onOpen")," ","and ",(0,u.kt)("inlineCode",null,"onClose")," properties to control the behaviour of the tooltip."),(0,u.kt)(j,{mdxType:"TooltipControllingDemo"}),(0,u.kt)("h2",null,(0,u.kt)("span",null,"Placement"),(0,u.kt)(c.Z,{anchorId:"placement",mdxType:"AnchorButton"})),(0,u.kt)("p",null,"You can use ",(0,u.kt)("inlineCode",null,"placement")," property to change the tooltip's placement."),(0,u.kt)(Z,{mdxType:"TooltipPlacementDemo"}),(0,u.kt)("h2",null,(0,u.kt)("span",null,"API"),(0,u.kt)(c.Z,{anchorId:"api",mdxType:"AnchorButton"})),(0,u.kt)("p",null,"Learn more about the properties and the customization points."),(0,u.kt)("h3",null,(0,u.kt)("span",null,"Usage"),(0,u.kt)(c.Z,{anchorId:"usage",mdxType:"AnchorButton"})),(0,u.kt)("pre",null,(0,u.kt)("code",I({parentName:"pre"},{className:"language-typescript"}),'// recommended\nimport Tooltip from "@sonnat/ui/Tooltip";\n\n//or\nimport { Tooltip } from "@sonnat/ui";\n')),(0,u.kt)("h3",null,(0,u.kt)("span",null,"Properties"),(0,u.kt)(c.Z,{anchorId:"properties",mdxType:"AnchorButton"})),(0,u.kt)("p",null,"Note that the documentation avoids mentioning all the native props (there are a lot) in this section of the components."),(0,u.kt)("table",{cols:4},(0,u.kt)("caption",null,"Tooltip Properties"),(0,u.kt)("thead",null,(0,u.kt)("tr",null,(0,u.kt)("th",null,"Name"),(0,u.kt)("th",null,"Type"),(0,u.kt)("th",null,"Default"),(0,u.kt)("th",null,"Description"))),(0,u.kt)("tbody",null,(0,u.kt)("tr",null,(0,u.kt)("td",null,"children"),(0,u.kt)("td",null,"node"),(0,u.kt)("td",null,"-"),(0,u.kt)("td",null,"The target element. This element works as an anchor for the tooltip.")),(0,u.kt)("tr",null,(0,u.kt)("td",null,"className"),(0,u.kt)("td",null,"string"),(0,u.kt)("td",null,"-"),(0,u.kt)("td",null,"Append to the class names applied to the component so you can override or extend the styles.")),(0,u.kt)("tr",null,(0,u.kt)("td",null,"text"),(0,u.kt)("td",null,"string"),(0,u.kt)("td",null,"-"),(0,u.kt)("td",null,"The text content of the tooltip.")),(0,u.kt)("tr",null,(0,u.kt)("td",null,"placement"),(0,u.kt)("td",null,'"left"',(0,u.kt)("br",null),'| "right"',(0,u.kt)("br",null),'| "top"',(0,u.kt)("br",null),'| "bottom"'),(0,u.kt)("td",null,"-"),(0,u.kt)("td",null,"The tooltip's placement. It will be auto updated when it collide with the window.")),(0,u.kt)("tr",null,(0,u.kt)("td",null,"triggersOn"),(0,u.kt)("td",null,'"click"',(0,u.kt)("br",null),'| "hover"',(0,u.kt)("br",null),'| "mouseMove"'),(0,u.kt)("td",null,"-"),(0,u.kt)("td",null,"The source of the event that will trigger the tooltip.")),(0,u.kt)("tr",null,(0,u.kt)("td",null,"tailed"),(0,u.kt)("td",null,"boolean"),(0,u.kt)("td",null,"false"),(0,u.kt)("td",null,"If ",(0,u.kt)("inlineCode",null,"true"),", the tooltip will have an arrow tail.")),(0,u.kt)("tr",null,(0,u.kt)("td",null,"open"),(0,u.kt)("td",null,"boolean"),(0,u.kt)("td",null,"-"),(0,u.kt)("td",null,"If ",(0,u.kt)("inlineCode",null,"true"),", the tooltip will be open.")),(0,u.kt)("tr",null,(0,u.kt)("td",null,"defaultOpen"),(0,u.kt)("td",null,"boolean"),(0,u.kt)("td",null,"-"),(0,u.kt)("td",null,"If ",(0,u.kt)("inlineCode",null,"true"),", the tooltip will be open on mount. Use when the component is not controlled.")),(0,u.kt)("tr",null,(0,u.kt)("td",null,"onOpen"),(0,u.kt)("td",null,"function"),(0,u.kt)("td",null,"-"),(0,u.kt)("td",null,"The Callback fires when the component requests to be opened.",(0,u.kt)("br",null),(0,u.kt)("em",null,(0,u.kt)("strong",null,"Signature:"))," ",(0,u.kt)("inlineCode",null,"function(event: React.SyntheticEvent | Event) => void"))),(0,u.kt)("tr",null,(0,u.kt)("td",null,"onClose"),(0,u.kt)("td",null,"function"),(0,u.kt)("td",null,"-"),(0,u.kt)("td",null,"The Callback fires when the component requests to be closed.",(0,u.kt)("br",null),(0,u.kt)("em",null,(0,u.kt)("strong",null,"Signature:"))," ",(0,u.kt)("inlineCode",null,"function(event: React.SyntheticEvent | Event) => void")))),(0,u.kt)("tfoot",null,(0,u.kt)("tr",null,(0,u.kt)("td",{colSpan:"4"},(0,u.kt)("ul",null,(0,u.kt)("li",null,"The ",(0,u.kt)("inlineCode",null,"ref")," is forwarded to the root element."),(0,u.kt)("li",null,"Any other properties supplied will be provided to the root element.")))))))}S.isMDXComponent=!0},1818:function(t,e,n){(window.__NEXT_P=window.__NEXT_P||[]).push(["/docs/components/Tooltip",function(){return n(9531)}])}},function(t){t.O(0,[9774,3679,1161,6156,320,2652,2187,1635,9481,9701],(function(){return e=1818,t(t.s=e);var e}));var e=t.O();_N_E=e}]);