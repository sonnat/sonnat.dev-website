(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[7166],{1204:function(e,t,l){"use strict";l.r(t),l.d(t,{default:function(){return j},meta:function(){return Z}});var n=l(6265),o=l(8140),i=l(8347),a=l(7294),r=l(3905),c=l(8482),d=l(1094),u=l(4749),p=l(7703),s=l(9387),h=l(3161),k=l(3910),m=l(5893),b=l(2292),y=function(){var e=a.useState(!1),t=(0,b.Z)(e,2),l=t[0],n=t[1];return(0,m.jsx)(k.Z,{code:'import ChoiceChip from "@sonnat/ui/ChoiceChip";\nimport * as React from "react";\n\nconst ChipControllingDemo: React.FC = () => {\n  const [isSelected, setSelected] = React.useState(false);\n\n  return (\n    <React.Fragment>\n      <ChoiceChip label="uncontrolled" defaultSelected={true} />\n      <ChoiceChip\n        label="controlled"\n        selected={isSelected}\n        onToggle={() => void setSelected(s => !s)}\n      />\n    </React.Fragment>\n  );\n};\n\nexport default ChipControllingDemo;',children:(0,m.jsxs)(a.Fragment,{children:[(0,m.jsx)("div",{className:"demoSubject",children:(0,m.jsx)(d.Z,{label:"uncontrolled",defaultSelected:!0})}),(0,m.jsx)("div",{className:"demoSubject",children:(0,m.jsx)(d.Z,{label:"controlled",selected:l,onToggle:function(){n((function(e){return!e}))}})})]})})};y.displayName="ChipControllingDemo";var f=y,C=l(9008),v=l(3257),T=l(1919);function x(e,t){var l=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),l.push.apply(l,n)}return l}function g(e){for(var t=1;t<arguments.length;t++){var l=null!=arguments[t]?arguments[t]:{};t%2?x(Object(l),!0).forEach((function(t){(0,n.Z)(e,t,l[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(l)):x(Object(l)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(l,t))}))}return e}var Z={title:"Chips",description:"Chips are compact components that represent discrete information.",getLayout:function(){return function(e){return(0,r.kt)(h.Z,{mdxType:"WithSidebar"},e)}}},S={meta:Z};function j(e){var t=e.components,l=(0,i.Z)(e,["components"]);return(0,r.kt)("wrapper",g(g(g({},S),l),{},{components:t,mdxType:"MDXLayout"}),(0,r.kt)(C.default,{mdxType:"Head"},(0,T.aT)("".concat(Z.title," | Sonnat Developer Tools, React Components & Resources")),(0,T.u2)(Z.description),(0,T.ai)("".concat(v.z,"/docs/components/").concat(Z.title)),(0,T.hL)([].concat((0,o.Z)(v.t),["chips","\u0686\u06cc\u067e\u0633"]))),(0,r.kt)("h1",null,(0,r.kt)("span",null,Z.title),(0,r.kt)(s.Z,{anchorId:"overview",mdxType:"AnchorButton"}),(0,r.kt)(p.Z,{href:"pages/docs/components/".concat(Z.title,".mdx"),mdxType:"PageEditButton"})),(0,r.kt)("p",null,Z.description),(0,r.kt)("p",null,"Chips allow users to enter information, make selections, filter content, or trigger actions. While buttons are expected to appear consistently and with familiar calls to action, chips should appear dynamically as a group of multiple interactive elements.",(0,r.kt)("br",null),"The most common use will be in some form of input, so some of the behaviour demonstrated here is not shown in context."),(0,r.kt)("h2",null,(0,r.kt)("span",null,"ActionChips"),(0,r.kt)(s.Z,{anchorId:"action-chips",mdxType:"AnchorButton"})),(0,r.kt)("p",null,"Action chips trigger actions related to primary content.",(0,r.kt)("br",null),"Despite that buttons are an alternative to action chips, there is an important difference between them. Buttons should appear persistently and consistently, while action buttons should appear dynamically and contextually."),(0,r.kt)(k.Z,{code:['<ActionChip label="default" color="default" />','<ActionChip label="primary" color="primary" />','<ActionChip label="secondary" color="secondary" />'].join("\n"),mdxType:"DemoBox"},(0,r.kt)("div",{className:"demoSubject"},(0,r.kt)(c.Z,{label:"default",color:"default",mdxType:"ActionChip"})),(0,r.kt)("div",{className:"demoSubject"},(0,r.kt)(c.Z,{label:"primary",color:"primary",mdxType:"ActionChip"})),(0,r.kt)("div",{className:"demoSubject"},(0,r.kt)(c.Z,{label:"secondary",color:"secondary",mdxType:"ActionChip"}))),(0,r.kt)("p",null,"You can declare the desired action with the ",(0,r.kt)("inlineCode",null,"onClick")," ","property."),(0,r.kt)(k.Z,{code:['<ActionChip\n  label="with onClick"\n  color="default"\n  onClick={() => {\n    alert("tryin to do something!")\n  }}\n/>'].join("\n"),mdxType:"DemoBox"},(0,r.kt)("div",{className:"demoSubject"},(0,r.kt)(c.Z,{label:"with onClick",color:"default",onClick:function(){alert("tryin to do something!")},mdxType:"ActionChip"}))),(0,r.kt)("h2",null,(0,r.kt)("span",null,"RemovableChips"),(0,r.kt)(s.Z,{anchorId:"removable-chips",mdxType:"AnchorButton"})),(0,r.kt)("p",null,"Removable chips represent information used in fields, and they can be removed with the help of a remove button.",(0,r.kt)("br",null),"They enable user input and verify that input by converting text into chips."),(0,r.kt)(k.Z,{code:['<RemovableChip label="default" color="default" />','<RemovableChip label="primary" color="primary" />','<RemovableChip label="secondary" color="secondary" />'].join("\n"),mdxType:"DemoBox"},(0,r.kt)("div",{className:"demoSubject"},(0,r.kt)(u.Z,{label:"default",color:"default",mdxType:"RemovableChip"})),(0,r.kt)("div",{className:"demoSubject"},(0,r.kt)(u.Z,{label:"primary",color:"primary",mdxType:"RemovableChip"})),(0,r.kt)("div",{className:"demoSubject"},(0,r.kt)(u.Z,{label:"secondary",color:"secondary",mdxType:"RemovableChip"}))),(0,r.kt)("p",null,"You can declare the desired remove action with the"," ",(0,r.kt)("inlineCode",null,"onRemove")," property."),(0,r.kt)(k.Z,{code:['<RemovableChip\n  label="with onRemove"\n  color="default"\n  onClick={() => {\n    alert("tryin to remove!");\n  }}\n/>'].join("\n"),mdxType:"DemoBox"},(0,r.kt)("div",{className:"demoSubject"},(0,r.kt)(u.Z,{label:"with onRemove",color:"default",onClick:function(){alert("tryin to remove!")},mdxType:"RemovableChip"}))),(0,r.kt)("h2",null,(0,r.kt)("span",null,"ChoiceChips"),(0,r.kt)(s.Z,{anchorId:"choice-chips",mdxType:"AnchorButton"})),(0,r.kt)("p",null,"Choice chips represent a selection / filters for a collection.",(0,r.kt)("br",null),"They are a good alternative to toggle buttons, radio buttons, checkboxes, and select menus."),(0,r.kt)(k.Z,{code:['<ChoiceChip label="default" color="default" />','<ChoiceChip label="primary" color="primary" />','<ChoiceChip label="secondary" color="secondary" />'].join("\n"),mdxType:"DemoBox"},(0,r.kt)("div",{className:"demoSubject"},(0,r.kt)(d.Z,{label:"default",color:"default",mdxType:"ChoiceChip"})),(0,r.kt)("div",{className:"demoSubject"},(0,r.kt)(d.Z,{label:"primary",color:"primary",mdxType:"ChoiceChip"})),(0,r.kt)("div",{className:"demoSubject"},(0,r.kt)(d.Z,{label:"secondary",color:"secondary",mdxType:"ChoiceChip"}))),(0,r.kt)("p",null,"Choice chips can be controlled or uncontrolled.",(0,r.kt)("br",null),"To set the default state of the uncontrolled choice chips, use"," ",(0,r.kt)("inlineCode",null,"defaultSelected")," property with a boolean value.",(0,r.kt)("br",null),"To control the state of the controlled choice chips, use"," ",(0,r.kt)("inlineCode",null,"selected={boolean}")," and"," ",(0,r.kt)("inlineCode",null,"onToggle")," properties."),(0,r.kt)(f,{mdxType:"ChipControllingDemo"}),(0,r.kt)("h2",null,(0,r.kt)("span",null,"Disabled"),(0,r.kt)(s.Z,{anchorId:"disabled",mdxType:"AnchorButton"})),(0,r.kt)("p",null,"Disabled chips do not respond to any action."),(0,r.kt)(k.Z,{code:['<ChoiceChip label="default" color="default" disabled />','<RemovableChip label="primary" color="primary" disabled />','<ActionChip label="secondary" color="secondary" disabled />'].join("\n"),mdxType:"DemoBox"},(0,r.kt)("div",{className:"demoSubject"},(0,r.kt)(d.Z,{label:"default",color:"default",disabled:!0,mdxType:"ChoiceChip"})),(0,r.kt)("div",{className:"demoSubject"},(0,r.kt)(u.Z,{label:"primary",color:"primary",disabled:!0,mdxType:"RemovableChip"})),(0,r.kt)("div",{className:"demoSubject"},(0,r.kt)(c.Z,{label:"secondary",color:"secondary",disabled:!0,mdxType:"ActionChip"}))),(0,r.kt)("h2",null,(0,r.kt)("span",null,"Rounded"),(0,r.kt)(s.Z,{anchorId:"rounded",mdxType:"AnchorButton"})),(0,r.kt)("p",null,"To have a rounded version of chips use ",(0,r.kt)("inlineCode",null,"rounded")," ","property."),(0,r.kt)(k.Z,{code:['<ChoiceChip label="default" color="default" rounded />','<RemovableChip label="primary" color="primary" rounded />','<ActionChip label="secondary" color="secondary" rounded />'].join("\n"),mdxType:"DemoBox"},(0,r.kt)("div",{className:"demoSubject"},(0,r.kt)(d.Z,{label:"default",color:"default",rounded:!0,mdxType:"ChoiceChip"})),(0,r.kt)("div",{className:"demoSubject"},(0,r.kt)(u.Z,{label:"primary",color:"primary",rounded:!0,mdxType:"RemovableChip"})),(0,r.kt)("div",{className:"demoSubject"},(0,r.kt)(c.Z,{label:"secondary",color:"secondary",rounded:!0,mdxType:"ActionChip"}))),(0,r.kt)("h2",null,(0,r.kt)("span",null,"Size"),(0,r.kt)(s.Z,{anchorId:"size",mdxType:"AnchorButton"})),(0,r.kt)("p",null,"To have the ",(0,r.kt)("del",null,"larger or")," smaller chips, use the"," ",(0,r.kt)("inlineCode",null,"size")," property."),(0,r.kt)(k.Z,{code:['<ChoiceChip label="default" color="default" size="small" />','<RemovableChip label="primary" color="primary" size="small" />','<ActionChip label="secondary" color="secondary" size="small" />'].join("\n"),mdxType:"DemoBox"},(0,r.kt)("div",{className:"demoSubject"},(0,r.kt)(d.Z,{label:"default",color:"default",size:"small",mdxType:"ChoiceChip"})),(0,r.kt)("div",{className:"demoSubject"},(0,r.kt)(u.Z,{label:"primary",color:"primary",size:"small",mdxType:"RemovableChip"})),(0,r.kt)("div",{className:"demoSubject"},(0,r.kt)(c.Z,{label:"secondary",color:"secondary",size:"small",mdxType:"ActionChip"}))),(0,r.kt)("h2",null,(0,r.kt)("span",null,"Outlined"),(0,r.kt)(s.Z,{anchorId:"outlined",mdxType:"AnchorButton"})),(0,r.kt)("p",null,"Outlined chips offer an alternative style."),(0,r.kt)(k.Z,{code:['<ChoiceChip label="default" color="default" variant="outlined" />','<RemovableChip label="primary" color="primary" variant="outlined" />','<ActionChip label="secondary" color="secondary" variant="outlined" />'].join("\n"),mdxType:"DemoBox"},(0,r.kt)("div",{className:"demoSubject"},(0,r.kt)(d.Z,{label:"default",color:"default",variant:"outlined",mdxType:"ChoiceChip"})),(0,r.kt)("div",{className:"demoSubject"},(0,r.kt)(u.Z,{label:"primary",color:"primary",variant:"outlined",mdxType:"RemovableChip"})),(0,r.kt)("div",{className:"demoSubject"},(0,r.kt)(c.Z,{label:"secondary",color:"secondary",variant:"outlined",mdxType:"ActionChip"}))),(0,r.kt)("h2",null,(0,r.kt)("span",null,"With Leading Icon"),(0,r.kt)(s.Z,{anchorId:"with-leading-icon",mdxType:"AnchorButton"})),(0,r.kt)("p",null,"Sometimes you might want to have icons for certain chips to enhance the UX of the application as we recognize imagery more easily than plain text."),(0,r.kt)(k.Z,{code:['<ChoiceChip label="default" color="default" leadingIcon="heart" />','<RemovableChip label="primary" color="primary" leadingIcon="heart" />','<ActionChip label="secondary" color="secondary" leadingIcon="heart" />'].join("\n"),mdxType:"DemoBox"},(0,r.kt)("div",{className:"demoSubject"},(0,r.kt)(d.Z,{label:"default",color:"default",leadingIcon:"heart",mdxType:"ChoiceChip"})),(0,r.kt)("div",{className:"demoSubject"},(0,r.kt)(u.Z,{label:"primary",color:"primary",leadingIcon:"heart",mdxType:"RemovableChip"})),(0,r.kt)("div",{className:"demoSubject"},(0,r.kt)(c.Z,{label:"secondary",color:"secondary",leadingIcon:"heart",mdxType:"ActionChip"}))),(0,r.kt)("h2",null,(0,r.kt)("span",null,"API"),(0,r.kt)(s.Z,{anchorId:"api",mdxType:"AnchorButton"})),(0,r.kt)("p",null,"Learn more about the properties and the customization points."),(0,r.kt)("h3",null,(0,r.kt)("span",null,"Usage"),(0,r.kt)(s.Z,{anchorId:"usage",mdxType:"AnchorButton"})),(0,r.kt)("pre",null,(0,r.kt)("code",g({parentName:"pre"},{className:"language-typescript"}),'// recommended\nimport ActionChip from "@sonnat/ui/ActionChip";\nimport RemovableChip from "@sonnat/ui/RemovableChip";\nimport ChoiceChip from "@sonnat/ui/ChoiceChip";\n\n//or\nimport { ActionChip, RemovableChip, ChoiceChip } from "@sonnat/ui";\n')),(0,r.kt)("h3",null,(0,r.kt)("span",null,"Properties"),(0,r.kt)(s.Z,{anchorId:"properties",mdxType:"AnchorButton"})),(0,r.kt)("p",null,"Note that the documentation avoids mentioning all the native props (there are a lot) in this section of the components."),(0,r.kt)("h4",null,(0,r.kt)("span",null,"Shared Properties"),(0,r.kt)(s.Z,{anchorId:"shared-properties",mdxType:"AnchorButton"})),(0,r.kt)("p",null,"The properties that are common to choice, action, and removable chips."),(0,r.kt)("table",{cols:4},(0,r.kt)("caption",null,"Chips Shared Properties"),(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",null,"Name"),(0,r.kt)("th",null,"Type"),(0,r.kt)("th",null,"Default"),(0,r.kt)("th",null,"Description"))),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,"label"),(0,r.kt)("td",null,"string"),(0,r.kt)("td",null,"-"),(0,r.kt)("td",null,"The content of the chip.")),(0,r.kt)("tr",null,(0,r.kt)("td",null,"className"),(0,r.kt)("td",null,"string"),(0,r.kt)("td",null,"-"),(0,r.kt)("td",null,"Append to the class names applied to the component so you can override or extend the styles.")),(0,r.kt)("tr",null,(0,r.kt)("td",null,"rounded"),(0,r.kt)("td",null,"boolean"),(0,r.kt)("td",null,"false"),(0,r.kt)("td",null,"If ",(0,r.kt)("inlineCode",null,"true"),", the chip will be rounded.")),(0,r.kt)("tr",null,(0,r.kt)("td",null,"disabled"),(0,r.kt)("td",null,"boolean"),(0,r.kt)("td",null,"false"),(0,r.kt)("td",null,"If ",(0,r.kt)("inlineCode",null,"true"),", the chip will be disabled.")),(0,r.kt)("tr",null,(0,r.kt)("td",null,"size"),(0,r.kt)("td",null,'"medium"',(0,r.kt)("br",null),'| "small"'),(0,r.kt)("td",null,'"medium"'),(0,r.kt)("td",null,"The size of the chip.")),(0,r.kt)("tr",null,(0,r.kt)("td",null,"color"),(0,r.kt)("td",null,'"default"',(0,r.kt)("br",null),'| "primary"',(0,r.kt)("br",null),'| "secondary"'),(0,r.kt)("td",null,'"default"'),(0,r.kt)("td",null,"The color of the chip.")),(0,r.kt)("tr",null,(0,r.kt)("td",null,"variant"),(0,r.kt)("td",null,'"filled"',(0,r.kt)("br",null),'| "outlined"'),(0,r.kt)("td",null,'"filled"'),(0,r.kt)("td",null,"The variant of the chip.")),(0,r.kt)("tr",null,(0,r.kt)("td",null,"leadingIcon"),(0,r.kt)("td",null,"string",(0,r.kt)("br",null),"| node"),(0,r.kt)("td",null,"-"),(0,r.kt)("td",null,"The leading icon placed before the label.",(0,r.kt)("br",null),"When a string was provided, the component will use it as a"," ",(0,r.kt)("inlineCode",null,"sonnat-icon")," identifier."))),(0,r.kt)("tfoot",null,(0,r.kt)("tr",null,(0,r.kt)("td",{colSpan:"4"},(0,r.kt)("ul",null,(0,r.kt)("li",null,"The ",(0,r.kt)("inlineCode",null,"ref")," is forwarded to the root element."),(0,r.kt)("li",null,"Any other properties supplied will be provided to the root element.")))))),(0,r.kt)("h4",null,(0,r.kt)("span",null,(0,r.kt)("mark",null,"ActionChip")," Specific Properties"),(0,r.kt)(s.Z,{anchorId:"actionchip-specific-properties",mdxType:"AnchorButton"})),(0,r.kt)("p",null,"The properties that are only available to action chips."),(0,r.kt)("table",{cols:4},(0,r.kt)("caption",null,"ActionChip Specific Properties"),(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",null,"Name"),(0,r.kt)("th",null,"Type"),(0,r.kt)("th",null,"Default"),(0,r.kt)("th",null,"Description"))),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,"onClick"),(0,r.kt)("td",null,"function"),(0,r.kt)("td",null,"-"),(0,r.kt)("td",null,"Callback fired when the action chip is clicked.",(0,r.kt)("br",null),(0,r.kt)("em",null,(0,r.kt)("strong",null,"Signature:"))," ",(0,r.kt)("inlineCode",null,"function(event: React.MouseEvent) => void"))))),(0,r.kt)("h4",null,(0,r.kt)("span",null,(0,r.kt)("mark",null,"RemovableChip")," Specific Properties"),(0,r.kt)(s.Z,{anchorId:"removablechip-specific-properties",mdxType:"AnchorButton"})),(0,r.kt)("p",null,"The properties that are only available to removable chips."),(0,r.kt)("table",{cols:4},(0,r.kt)("caption",null,"RemovableChip Specific Properties"),(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",null,"Name"),(0,r.kt)("th",null,"Type"),(0,r.kt)("th",null,"Default"),(0,r.kt)("th",null,"Description"))),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,"onRemove"),(0,r.kt)("td",null,"function"),(0,r.kt)("td",null,"-"),(0,r.kt)("td",null,"Callback fired when the remove button is clicked.",(0,r.kt)("br",null),(0,r.kt)("em",null,(0,r.kt)("strong",null,"Signature:"))," ",(0,r.kt)("inlineCode",null,"function(event: React.MouseEvent) => void"))))),(0,r.kt)("h4",null,(0,r.kt)("span",null,(0,r.kt)("mark",null,"ChoiceChip")," Specific Properties"),(0,r.kt)(s.Z,{anchorId:"choicechip-specific-properties",mdxType:"AnchorButton"})),(0,r.kt)("p",null,"The properties that are only available to choice chips."),(0,r.kt)("table",{cols:4},(0,r.kt)("caption",null,"ChoiceChip Specific Properties"),(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",null,"Name"),(0,r.kt)("th",null,"Type"),(0,r.kt)("th",null,"Default"),(0,r.kt)("th",null,"Description"))),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,"selected"),(0,r.kt)("td",null,"boolean"),(0,r.kt)("td",null,"false"),(0,r.kt)("td",null,"If ",(0,r.kt)("inlineCode",null,"true"),", the chip will be selected.")),(0,r.kt)("tr",null,(0,r.kt)("td",null,"defaultSelected"),(0,r.kt)("td",null,"boolean"),(0,r.kt)("td",null,"false"),(0,r.kt)("td",null,"The default state of ",(0,r.kt)("inlineCode",null,"selected"),". Use when the component is not controlled.")),(0,r.kt)("tr",null,(0,r.kt)("td",null,"onToggle"),(0,r.kt)("td",null,"function"),(0,r.kt)("td",null,"-"),(0,r.kt)("td",null,"Callback fired when the chip is selected/unselected.",(0,r.kt)("br",null),(0,r.kt)("em",null,(0,r.kt)("strong",null,"Signature:"))," ",(0,r.kt)("inlineCode",null,"function(event: React.MouseEvent, isSelected: boolean) => void"))))))}j.isMDXComponent=!0},1792:function(e,t,l){(window.__NEXT_P=window.__NEXT_P||[]).push(["/docs/components/Chips",function(){return l(1204)}])}},function(e){e.O(0,[9774,3679,1161,6156,320,2652,5146,1635,9481,9701],(function(){return t=1792,e(e.s=t);var t}));var t=e.O();_N_E=t}]);