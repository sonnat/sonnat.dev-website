_N_E=(window.webpackJsonp_N_E=window.webpackJsonp_N_E||[]).push([[23],{Mm9j:function(e,t,n){"use strict";n.r(t),n.d(t,"meta",(function(){return x})),n.d(t,"default",(function(){return P}));var l=n("cpVT"),b=n("z7pX"),o=n("dhJC"),a=n("q1tI"),c=n("7ljp"),d=n("Bs6S"),i=n("hrFB"),r=n("PW80"),u=n("G0Pc"),s=n("XLwr"),j=n("nKUr"),O=n("xvhg"),p=n("fZnD"),h=n("UhvI"),m=function(){var e=a.useState(!1),t=Object(O.a)(e,2),n=t[0],l=t[1];return Object(j.jsx)(h.a,{flexDirection:"column",code:'import Radio from "@sonnat/ui/Radio";\nimport Button from "@sonnat/ui/Button";\nimport * as React from "react";\n\nconst Demo: React.FC = () => {\n  const [checked, setChecked] = React.useState(false);\n\n  return (\n    <React.Fragment>\n      <Button\n        variant="outlined"\n        size="small"\n        label="Toggle the Radio"\n        onClick={() => void setChecked(c => !c)}\n      />\n      <Radio\n        label="Label"\n        checked={checked}\n        inputProps={{ id: "ch-box-2" }}\n        onChange={() => void setChecked(true)}\n      />\n    </React.Fragment>\n  );\n};\n\nexport default Demo;\n',children:Object(j.jsxs)(a.Fragment,{children:[Object(j.jsx)(p.a,{variant:"outlined",size:"small",label:"Toggle the Radio",onClick:function(){l((function(e){return!e}))}}),Object(j.jsx)(d.a,{label:"Label",checked:n,inputProps:{id:"radio-2"},onChange:function(){l(!0)}})]})})};m.displayName="RadioControlledDemo";var f=m,R=n("g4pe"),y=n.n(R),g=n("C6zX"),T=n("cBaE");function C(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);t&&(l=l.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,l)}return n}function v(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?C(Object(n),!0).forEach((function(t){Object(l.a)(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):C(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}var x={title:"Radio",description:"Used to select a single state from multiple options.",getLayout:function(){return function(e){return Object(c.b)(s.a,{mdxType:"WithSidebar"},e)}}},w={meta:x};function P(e){var t=e.components,n=Object(o.a)(e,["components"]);return Object(c.b)("wrapper",v(v(v({},w),n),{},{components:t,mdxType:"MDXLayout"}),Object(c.b)(y.a,{mdxType:"Head"},Object(T.e)("".concat(x.title," | Sonnat Developer Tools, React Components & Resources")),Object(T.c)(x.description),Object(T.b)("".concat(g.b,"/docs/components/").concat(x.title)),Object(T.d)([].concat(Object(b.a)(g.a),["radio"]))),Object(c.b)("h1",null,Object(c.b)("span",null,x.title),Object(c.b)(u.a,{anchorId:"overview",mdxType:"AnchorButton"}),Object(c.b)(r.a,{href:"pages/docs/components/".concat(x.title,".mdx"),mdxType:"PageEditButton"})),Object(c.b)("p",null,x.description),Object(c.b)("p",null,"The difference from"," ",Object(c.b)("a",{href:"/docs/components/Select",title:"Select documentation"},"Select")," ","is that Radio is visible to the user and can facilitate the comparison of choice, which means there shouldn't be too many of them."),Object(c.b)("h2",null,Object(c.b)("span",null,"Simple Radios"),Object(c.b)(u.a,{anchorId:"simple-radios",mdxType:"AnchorButton"})),Object(c.b)(h.a,{code:'<Radio />\n<Radio disabled />\n<Radio defaultChecked disabled />\n<Radio indeterminated />\n<Radio indeterminated disabled />\n<Radio inputProps={{ id: "radio-0" }} defaultChecked label="Label" />\n<Radio\n  inputProps={{ id: "radio-1" }}\n  defaultChecked\n  label="Label"\n  disabled\n/>',mdxType:"DemoBox"},Object(c.b)(d.a,{mdxType:"Radio"}),Object(c.b)(d.a,{disabled:!0,mdxType:"Radio"}),Object(c.b)(d.a,{defaultChecked:!0,disabled:!0,mdxType:"Radio"}),Object(c.b)(d.a,{indeterminated:!0,mdxType:"Radio"}),Object(c.b)(d.a,{indeterminated:!0,disabled:!0,mdxType:"Radio"}),Object(c.b)(d.a,{inputProps:{id:"radio-0"},defaultChecked:!0,label:"Label",mdxType:"Radio"}),Object(c.b)(d.a,{inputProps:{id:"radio-1"},defaultChecked:!0,label:"Label",disabled:!0,mdxType:"Radio"})),Object(c.b)("h2",null,Object(c.b)("span",null,"Controlled Radios"),Object(c.b)(u.a,{anchorId:"controlled-radios",mdxType:"AnchorButton"})),Object(c.b)("p",null,"You can use the ",Object(c.b)("inlineCode",null,"checked"),", and"," ",Object(c.b)("inlineCode",null,"onChange")," properties to control the behaviour of the radio."),Object(c.b)(f,{mdxType:"RadioControlledDemo"}),Object(c.b)("h2",null,Object(c.b)("span",null,"With ",Object(c.b)("mark",null,"RadioGroup")),Object(c.b)(u.a,{anchorId:"with-radiogroup",mdxType:"AnchorButton"})),Object(c.b)("p",null,Object(c.b)("a",{href:"/docs/components/RadioGroup",title:"RadioGroup documentation"},"RadioGroup")," ","is a helpful wrapper used to group and manage radio controls with an easier API. RadioGroup can also be controlled/uncontrolled like the radios.",Object(c.b)("br",null),"To learn more about ",Object(c.b)("strong",null,"RadioGroup"),"'s API,"," ",Object(c.b)("a",{href:"/docs/components/RadioGroup",title:"RadioGroup documentation"},"read it's documentation"),"."),Object(c.b)(h.a,{code:'<RadioGroup name="food" defaultValue={"kebab"}>\n  <Radio inputProps={{ id: "radio-00" }} label="Burger" value="burger" />\n  <Radio inputProps={{ id: "radio-01" }} label="Sushi" value="sushi" />\n  <Radio inputProps={{ id: "radio-02" }} label="Kebab" value="kebab" />\n</RadioGroup>',mdxType:"DemoBox"},Object(c.b)(i.a,{name:"food",defaultValue:"kebab",mdxType:"RadioGroup"},Object(c.b)(d.a,{inputProps:{id:"radio-00"},label:"Burger",value:"burger",mdxType:"Radio"}),Object(c.b)(d.a,{inputProps:{id:"radio-01"},label:"Sushi",value:"sushi",mdxType:"Radio"}),Object(c.b)(d.a,{inputProps:{id:"radio-02"},label:"Kebab",value:"kebab",mdxType:"Radio"}))),Object(c.b)("h2",null,Object(c.b)("span",null,"API"),Object(c.b)(u.a,{anchorId:"api",mdxType:"AnchorButton"})),Object(c.b)("p",null,"Learn more about the properties and the customization points."),Object(c.b)("h3",null,Object(c.b)("span",null,"Usage"),Object(c.b)(u.a,{anchorId:"usage",mdxType:"AnchorButton"})),Object(c.b)("pre",null,Object(c.b)("code",v({parentName:"pre"},{className:"language-typescript"}),'// recommended\nimport Radio from "@sonnat/ui/Radio";\n\n//or\nimport { Radio } from "@sonnat/ui";\n')),Object(c.b)("h3",null,Object(c.b)("span",null,"Properties"),Object(c.b)(u.a,{anchorId:"properties",mdxType:"AnchorButton"})),Object(c.b)("p",null,"Note that the documentation avoids mentioning all the native props (there are a lot) in this section of the components."),Object(c.b)("table",{cols:4},Object(c.b)("caption",null,"Radio Properties"),Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Type"),Object(c.b)("th",null,"Default"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"className"),Object(c.b)("td",null,"string"),Object(c.b)("td",null,"-"),Object(c.b)("td",null,"Append to the class names applied to the component so you can override or extend the styles.")),Object(c.b)("tr",null,Object(c.b)("td",null,"label"),Object(c.b)("td",null,"string"),Object(c.b)("td",null,"-"),Object(c.b)("td",null,"If ",Object(c.b)("inlineCode",null,"label")," was provided, a"," ",Object(c.b)("inlineCode",null,"<label>")," element will be rendered next to the radio.")),Object(c.b)("tr",null,Object(c.b)("td",null,"name"),Object(c.b)("td",null,"string"),Object(c.b)("td",null,"-"),Object(c.b)("td",null,"The name of the radio.")),Object(c.b)("tr",null,Object(c.b)("td",null,"value"),Object(c.b)("td",null,"string"),Object(c.b)("td",null,"-"),Object(c.b)("td",null,"The value of the radio. The DOM API casts this to a string.",Object(c.b)("br",null),"The browser uses ",Object(c.b)("inlineCode",null,'"on"')," as the default value.")),Object(c.b)("tr",null,Object(c.b)("td",null,"indeterminated"),Object(c.b)("td",null,"boolean"),Object(c.b)("td",null,"false"),Object(c.b)("td",null,"If ",Object(c.b)("inlineCode",null,"true"),", the radio will appear indeterminate.",Object(c.b)("br",null),"This does not set the native input element to indeterminate due to inconsistent behavior across browsers.")),Object(c.b)("tr",null,Object(c.b)("td",null,"readOnly"),Object(c.b)("td",null,"boolean"),Object(c.b)("td",null,"false"),Object(c.b)("td",null,"If ",Object(c.b)("inlineCode",null,"true"),", the radio will be read-only.")),Object(c.b)("tr",null,Object(c.b)("td",null,"checked"),Object(c.b)("td",null,"boolean"),Object(c.b)("td",null,"-"),Object(c.b)("td",null,"If ",Object(c.b)("inlineCode",null,"true"),", the radio will be checked.")),Object(c.b)("tr",null,Object(c.b)("td",null,"defaultChecked"),Object(c.b)("td",null,"boolean"),Object(c.b)("td",null,"-"),Object(c.b)("td",null,"The default state of ",Object(c.b)("inlineCode",null,"checked"),". Use when the component is not controlled.")),Object(c.b)("tr",null,Object(c.b)("td",null,"disabled"),Object(c.b)("td",null,"boolean"),Object(c.b)("td",null,"false"),Object(c.b)("td",null,"If ",Object(c.b)("inlineCode",null,"true"),", the radio will be disabled.")),Object(c.b)("tr",null,Object(c.b)("td",null,"required"),Object(c.b)("td",null,"boolean"),Object(c.b)("td",null,"false"),Object(c.b)("td",null,"If ",Object(c.b)("inlineCode",null,"true"),", the radio will be required.")),Object(c.b)("tr",null,Object(c.b)("td",null,"hasError"),Object(c.b)("td",null,"boolean"),Object(c.b)("td",null,"false"),Object(c.b)("td",null,"If ",Object(c.b)("inlineCode",null,"true"),", the radio will indicate invalid input.")),Object(c.b)("tr",null,Object(c.b)("td",null,"inputProps"),Object(c.b)("td",null,"object"),Object(c.b)("td",null,"-"),Object(c.b)("td",null,"The properties applied to the ",Object(c.b)("inlineCode",null,"input")," element.")),Object(c.b)("tr",null,Object(c.b)("td",null,"labelProps"),Object(c.b)("td",null,"object"),Object(c.b)("td",null,"-"),Object(c.b)("td",null,"The properties applied to the ",Object(c.b)("inlineCode",null,"label")," element.")),Object(c.b)("tr",null,Object(c.b)("td",null,"onChange"),Object(c.b)("td",null,"function"),Object(c.b)("td",null,"-"),Object(c.b)("td",null,"The Callback fires when the state has changed.",Object(c.b)("br",null),Object(c.b)("em",null,Object(c.b)("strong",null,"Signature:"))," ",Object(c.b)("inlineCode",null,"function(event: React.ChangeEvent, checkedState: boolean) => void")))),Object(c.b)("tfoot",null,Object(c.b)("tr",null,Object(c.b)("td",{colSpan:"4"},Object(c.b)("ul",null,Object(c.b)("li",null,"The ",Object(c.b)("inlineCode",null,"ref")," is forwarded to the root element."),Object(c.b)("li",null,"Any other properties supplied will be provided to the root element.")))))))}P.isMDXComponent=!0},"hJt+":function(e,t,n){(window.__NEXT_P=window.__NEXT_P||[]).push(["/docs/components/Radio",function(){return n("Mm9j")}])}},[["hJt+",0,1,2,3,4,5,6]]]);