_N_E=(window.webpackJsonp_N_E=window.webpackJsonp_N_E||[]).push([[11],{SlGq:function(e,t,n){(window.__NEXT_P=window.__NEXT_P||[]).push(["/docs/components/Badge",function(){return n("rE/f")}])},"rE/f":function(e,t,n){"use strict";n.r(t),n.d(t,"meta",(function(){return G})),n.d(t,"default",(function(){return Z}));var a=n("cpVT"),o=n("z7pX"),l=n("dhJC"),i=n("q1tI"),r=n.n(i),c=n("7ljp"),d=n("fZnD"),b=n("rePB"),s=n("Ff2n"),u=n("wx14"),p=n("17x9"),j=n.n(p),m=n("TSYQ"),h=n.n(m),O=n("eZlZ"),g="Badge",v=["filled","dotted"],y=["large","medium","small"],f=["primary","secondary"],x=["rectangular","circular"],B=function(e){return e.replace(/-./g,(function(e){return e.toUpperCase()[1]}))},T=Object(O.a)((function(e){var t=e.colors,n=e.darkMode,a=e.direction,o=e.hacks,l=e.typography,i=l.pxToRem,r=l.fontWeight,c=l.useText,d=l.fontFamily;return{root:Object(u.a)({},o.safariTransitionRadiusOverflowCombinationFix,{position:"relative",flexShrink:0,verticalAlign:"middle"}),standalone:{transform:"scale(0)",visibility:"hidden",opacity:0,transformOrigin:"100% 0",transition:"transform 360ms ease,\n          visibility 360ms ease,\n          opacity 360ms ease"},relative:{display:"inline-flex","& > $standalone":{position:"absolute"}},visible:{visibility:"visible",opacity:1,transform:"scale(1)"},notDottedBadge:Object(u.a)({},c({fontSize:i(10),fontWeight:r.medium,lineHeight:1.65}),{direction:a,fontFamily:d[a],textAlign:"center !important",minWidth:i(16),height:i(16),borderRadius:i(8),display:"inline-block",padding:"0 ".concat(i(4))}),filled:{extend:"notDottedBadge"},dotted:{borderRadius:"50%",display:"inline-block"},filledPrimary:{backgroundColor:n?t.primary.light:t.primary.origin,color:t.getContrastColorOf(n?t.primary.light:t.primary.origin)},filledSecondary:{backgroundColor:n?t.secondary.light:t.secondary.origin,color:t.getContrastColorOf(n?t.secondary.light:t.secondary.origin)},dottedPrimary:{backgroundColor:n?t.primary.light:t.primary.origin},dottedSecondary:{backgroundColor:n?t.secondary.light:t.secondary.origin},large:{width:i(12),height:i(12)},medium:{width:i(8),height:i(8)},small:{width:i(4),height:i(4)},anchorElement:{},rectangularOverlapping:{},circularOverlapping:{},topLeft:{top:0,left:0,"&$rectangularOverlapping":{top:"0",left:"0"},"&$circularOverlapping":{top:"15%",left:"15%"},"&$visible":{transform:"scale(1) translate(-50%, -50%)"},"&:not($visible)":{transform:"scale(0) translate(-50%, -50%)"}},topRight:{top:0,right:0,"&$rectangularOverlapping":{top:"0",right:"0"},"&$circularOverlapping":{top:"15%",right:"15%"},"&$visible":{transform:"scale(1) translate(50%, -50%)"},"&:not($visible)":{transform:"scale(0) translate(50%, -50%)"}},bottomLeft:{bottom:0,left:0,"&$rectangularOverlapping":{bottom:"0",left:"0"},"&$circularOverlapping":{bottom:"15%",left:"15%"},"&$visible":{transform:"scale(1) translate(-50%, 50%)"},"&:not($visible)":{transform:"scale(0) translate(-50%, 50%)"}},bottomRight:{bottom:0,right:0,"&$rectangularOverlapping":{bottom:"0",right:"0"},"&$circularOverlapping":{bottom:"15%",right:"15%"},"&$visible":{transform:"scale(1) translate(50%, 50%)"},"&:not($visible)":{transform:"scale(0) translate(50%, 50%)"}}}}),{name:"Sonnat".concat(g)}),S=r.a.memo(r.a.forwardRef((function(e,t){var n,a=e.className,o=e.textContent,l=e.parentProps,i=void 0===l?{}:l,c=e.childShape,d=void 0===c?"rectangular":c,p=e.children,j=e.horizontalPosition,m=void 0===j?"right":j,O=e.verticalPosition,g=void 0===O?"top":O,S=e.color,w=void 0===S?"primary":S,C=e.variant,N=void 0===C?"filled":C,P=e.dotSize,z=void 0===P?"medium":P,D=e.visible,R=void 0===D||D,E=Object(s.a)(e,["className","textContent","parentProps","childShape","children","horizontalPosition","verticalPosition","color","variant","dotSize","visible"]),I=i.className,k=Object(s.a)(i,["className"]),A=T(),$="dotted"===N,V=!0===R,F=v.includes(N),_=f.includes(w),W=x.includes(d),X=y.includes(z);if(null!=p&&r.a.isValidElement(p))try{n=r.a.Children.only(p)}catch(J){throw new Error("[Sonnat]: The `children` prop has to be a single valid element.")}var L=A[B("".concat(g,"-").concat(m))],q=function(e){var n,l=arguments.length>1&&void 0!==arguments[1]&&arguments[1];return r.a.createElement("span",Object(u.a)({ref:t,className:h()(A.standalone,A.root,e,l?void 0:I,a,(n={},Object(b.a)(n,A.visible,V),Object(b.a)(n,A[B("".concat(N,"-").concat(w))],F&&_),Object(b.a)(n,A[z],X&&$),Object(b.a)(n,A[N],F),n))},l?E:Object(u.a)({},E,k)),$?null:o)};return $||!$&&o?n?r.a.createElement("div",Object(u.a)({ref:t,className:h()(A.root,A.relative,I,a)},k),q(h()(L,Object(b.a)({},A["".concat(d,"Overlapping")],W)),!0),r.a.cloneElement(n,{className:h()(n.props.className,A.anchorElement)})):q():null})));S.displayName=g,S.propTypes={children:j.a.element,parentProps:j.a.object,textContent:j.a.string,className:j.a.string,visible:j.a.bool,horizontalPosition:j.a.oneOf(["left","right"]),verticalPosition:j.a.oneOf(["top","bottom"]),childShape:j.a.oneOf(x),dotSize:j.a.oneOf(y),color:j.a.oneOf(f),variant:j.a.oneOf(v)};var w=S,C=n("Mdm+"),N=n("PW80"),P=n("G0Pc"),z=n("XLwr"),D=n("UhvI"),R=n("nKUr"),E=n("xvhg"),I=function(){var e=i.useState(!0),t=Object(E.a)(e,2),n=t[0],a=t[1];return Object(R.jsx)(D.a,{code:'import Badge from "@sonnat/ui/Badge";\nimport Button from "@sonnat/ui/Button";\nimport * as React from "react";\n\nconst BadgeVisibilityDemo: React.FC = () => {\n  const [isVisible, setVisible] = React.useState(true);\n\n  return (\n    <React.Fragment>\n      <Badge\n        visible={isVisible}\n        variant="dotted"\n        color="secondary"\n      >\n        // Rectangular shape\n        <div></div>\n      </Badge>\n      <Button\n        size="small"\n        variant="outlined"\n        label="Toggle visibility"\n        onClick={() => void setVisible(v => !v)}\n      />\n    </React.Fragment>\n  );\n};\n\nexport default BadgeVisibilityDemo;\n',children:Object(R.jsxs)(i.Fragment,{children:[Object(R.jsx)("div",{className:"demoSubject",children:Object(R.jsx)(w,{visible:n,variant:"dotted",childShape:"rectangular",color:"secondary",children:Object(R.jsx)("div",{style:{width:32,height:32,backgroundColor:"#eaeaea"}})})}),Object(R.jsx)(d.a,{className:"demoSubject",size:"small",variant:"outlined",label:"Toggle visibility",onClick:function(){a((function(e){return!e}))}})]})})};I.displayName="BadgeVisibilityDemo";var k=I,A=n("Xswu"),$=n("QzrO"),V=n("hrFB"),F=n("Bs6S"),_=Object(O.a)((function(e){return{demoRow:{display:"flex","& + &":{marginTop:e.typography.pxToRem(16)}}}}),{name:"BadgeAlignmentDemo"}),W=function(){var e=_(),t=i.useState("top"),n=Object(E.a)(t,2),a=n[0],o=n[1],l=i.useState("right"),r=Object(E.a)(l,2),c=r[0],d=r[1],b='<Badge\n  variant="dotted"\n  color="secondary"\n  verticalPosition="'.concat(a,'"\n  horizontalPosition="').concat(c,'"\n>\n  // Rectangular shape\n  <div></div>\n</Badge>\n<Badge\n  childShape="circular"\n  color="secondary"\n  textContent="9"\n  verticalPosition="').concat(a,'"\n  horizontalPosition="').concat(c,'"\n>\n  // Circular shape\n  <div></div>\n</Badge>');return Object(R.jsxs)(D.a,{code:b,flexDirection:"column",horizontalAlignment:"center",children:[Object(R.jsxs)("div",{className:e.demoRow,children:[Object(R.jsxs)(A.a,{className:"demoSubject",children:[Object(R.jsx)($.a,{htmlFor:"radiogroup-vertical-align",children:"Vertical"}),Object(R.jsxs)(V.a,{id:"radiogroup-vertical-align",defaultValue:"top",onChange:function(e){o(e.target.value)},children:[Object(R.jsx)(F.a,{inputProps:{id:"radiogroup-vertical-align-top"},label:"top",value:"top"}),Object(R.jsx)(F.a,{inputProps:{id:"radiogroup-vertical-align-bottom"},label:"bottom",value:"bottom"})]})]}),Object(R.jsxs)(A.a,{className:"demoSubject",children:[Object(R.jsx)($.a,{htmlFor:"radiogroup-horizontal-align",children:"Horizontal"}),Object(R.jsxs)(V.a,{id:"radiogroup-horizontal-align",defaultValue:"right",onChange:function(e){d(e.target.value)},children:[Object(R.jsx)(F.a,{inputProps:{id:"radiogroup-horizontal-align-left"},label:"left",value:"left"}),Object(R.jsx)(F.a,{inputProps:{id:"radiogroup-horizontal-align-right"},label:"right",value:"right"})]})]})]}),Object(R.jsxs)("div",{className:e.demoRow,children:[Object(R.jsx)("div",{className:"demoSubject",children:Object(R.jsx)(w,{variant:"dotted",childShape:"rectangular",color:"secondary",verticalPosition:a,horizontalPosition:c,children:Object(R.jsx)("div",{style:{width:32,height:32,backgroundColor:"#eaeaea"}})})}),Object(R.jsx)("div",{className:"demoSubject",children:Object(R.jsx)(w,{textContent:"9",childShape:"circular",color:"secondary",verticalPosition:a,horizontalPosition:c,children:Object(R.jsx)("div",{style:{width:32,height:32,borderRadius:"50%",backgroundColor:"#eaeaea"}})})})]})]})};W.displayName="BadgeAlignmentDemo";var X=W,L=n("g4pe"),q=n.n(L),J=n("C6zX"),M=n("cBaE");function U(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function Y(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?U(Object(n),!0).forEach((function(t){Object(a.a)(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):U(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}var G={title:"Badge",description:"Displays an indicator that requires attention.",layout:z.a},H={meta:G};function Z(e){var t=e.components,n=Object(l.a)(e,["components"]);return Object(c.b)("wrapper",Y(Y(Y({},H),n),{},{components:t,mdxType:"MDXLayout"}),Object(c.b)(q.a,{mdxType:"Head"},Object(M.e)("".concat(G.title," | Sonnat Developer Tools, React Components & Resources")),Object(M.c)(G.description),Object(M.b)("".concat(J.b,"/docs/components/").concat(G.title)),Object(M.d)([].concat(Object(o.a)(J.a),["badge","\u0646\u0634\u0627\u0646","\u0646\u0634\u0627\u0646\u200c\u06af\u0631"]))),Object(c.b)("h1",null,Object(c.b)("span",null,G.title),Object(c.b)(P.a,{anchorId:"overview",mdxType:"AnchorButton"}),Object(c.b)(N.a,{href:"pages/docs/components/".concat(G.title,".mdx"),mdxType:"PageEditButton"})),Object(c.b)("p",null,G.description),Object(c.b)("h2",null,Object(c.b)("span",null,"Filled Badges"),Object(c.b)(P.a,{anchorId:"filled-badges",mdxType:"AnchorButton"})),Object(c.b)("p",null,"Filled badges show text or number, using primary and secondary colors.",Object(c.b)("br",null),"You can use them as a standalone badge or as a relative badge applied to its children."),Object(c.b)(D.a,{code:['<Badge textContent="NEW" />','<Badge textContent="NEW" color="secondary" />','<Badge textContent="5">\n  <Button\n    aria-label="Demo notification button"\n    leadingIcon="email-o"\n    variant="inlined"\n  />\n</Badge>','<Badge textContent="5" color="secondary">\n  <Button\n    aria-label="Demo notification button"\n    leadingIcon="email-o"\n    variant="inlined"\n  />\n</Badge>'].join("\n"),mdxType:"DemoBox"},Object(c.b)(w,{textContent:"NEW",className:"demoSubject",mdxType:"Badge"}),Object(c.b)(w,{textContent:"NEW",className:"demoSubject",color:"secondary",mdxType:"Badge"}),Object(c.b)(w,{textContent:"5",className:"demoSubject",mdxType:"Badge"},Object(c.b)(d.a,{"aria-label":"Demo notification button",leadingIcon:"email-o",variant:"inlined",mdxType:"Button"})),Object(c.b)(w,{textContent:"5",className:"demoSubject",color:"secondary",mdxType:"Badge"},Object(c.b)(d.a,{"aria-label":"Demo notification button",leadingIcon:"email-o",variant:"inlined",mdxType:"Button"}))),Object(c.b)("h2",null,Object(c.b)("span",null,"Dotted Badges"),Object(c.b)(P.a,{anchorId:"dotted-badges",mdxType:"AnchorButton"})),Object(c.b)("p",null,"Dotted badge is a small dot indicates that something has changed without giving a count.",Object(c.b)("br",null),"Just like the filled badges, you can have dotted badges as standalone or relative to its child."),Object(c.b)(D.a,{code:['<Badge variant="dotted" />','<Badge color="secondary" variant="dotted" />','<Badge variant="dotted">\n  <Text variant="captionText" rootNode="p">\n    This is a typography!\n  </Text>\n</Badge>','<Badge variant="dotted" color="secondary">\n  <Button\n    aria-label="Demo download button"\n    leadingIcon="download"\n    variant="inlined"\n  />\n</Badge>'].join("\n"),mdxType:"DemoBox"},Object(c.b)(w,{className:"demoSubject",variant:"dotted",mdxType:"Badge"}),Object(c.b)(w,{className:"demoSubject",color:"secondary",variant:"dotted",mdxType:"Badge"}),Object(c.b)("div",{className:"demoSubject"},Object(c.b)(w,{variant:"dotted",mdxType:"Badge"},Object(c.b)(C.a,{variant:"captionText",rootNode:"p",mdxType:"Text"},"This is a typography!"))),Object(c.b)(w,{className:"demoSubject",color:"secondary",variant:"dotted",mdxType:"Badge"},Object(c.b)(d.a,{"aria-label":"Demo download button",leadingIcon:"download",variant:"inlined",mdxType:"Button"}))),Object(c.b)("p",null,"To have the larger or smaller dotted badges, use the"," ",Object(c.b)("inlineCode",null,"dotSize")," property."),Object(c.b)(D.a,{code:['<Badge dotSize="small" variant="dotted" />','<Badge dotSize="medium" variant="dotted" />','<Badge dotSize="large" variant="dotted" />'].join("\n"),mdxType:"DemoBox"},Object(c.b)(w,{className:"demoSubject",dotSize:"small",variant:"dotted",mdxType:"Badge"}),Object(c.b)(w,{className:"demoSubject",dotSize:"medium",variant:"dotted",mdxType:"Badge"}),Object(c.b)(w,{className:"demoSubject",dotSize:"large",variant:"dotted",mdxType:"Badge"})),Object(c.b)("h2",null,Object(c.b)("span",null,"Better Placement"),Object(c.b)(P.a,{anchorId:"better-placement",mdxType:"AnchorButton"})),Object(c.b)("p",null,"You can use the ",Object(c.b)("inlineCode",null,"childShape")," property to place the badge way more accurately relative to the corner of the wrapped child(ren)."),Object(c.b)(D.a,{code:['<Badge variant="dotted" childShape="rectangular">\n  // Rectangular shape\n  <div></div>\n</Badge>','<Badge variant="dotted" childShape="circular">\n  // Circular shape\n  <div></div>\n</Badge>'].join("\n"),mdxType:"DemoBox"},Object(c.b)("div",{className:"demoSubject"},Object(c.b)(w,{variant:"dotted",childShape:"rectangular",mdxType:"Badge"},Object(c.b)("div",{style:{width:32,height:32,backgroundColor:"#eaeaea"}}))),Object(c.b)("div",{className:"demoSubject"},Object(c.b)(w,{variant:"dotted",childShape:"circular",mdxType:"Badge"},Object(c.b)("div",{style:{width:32,height:32,borderRadius:"50%",backgroundColor:"#eaeaea"}})))),Object(c.b)("h2",null,Object(c.b)("span",null,"Visibility"),Object(c.b)(P.a,{anchorId:"visibility",mdxType:"AnchorButton"})),Object(c.b)("p",null,"The visibility of badges can be controlled using the"," ",Object(c.b)("inlineCode",null,"visible")," property."),Object(c.b)(k,{mdxType:"BadgeVisibilityDemo"}),Object(c.b)("h2",null,Object(c.b)("span",null,"Alignment"),Object(c.b)(P.a,{anchorId:"alignment",mdxType:"AnchorButton"})),Object(c.b)("p",null,"You can use ",Object(c.b)("inlineCode",null,"horizontalPosition")," and"," ",Object(c.b)("inlineCode",null,"verticalPosition")," properties to move the badge to any corner of the wrapped element."),Object(c.b)(X,{mdxType:"BadgeAlignmentDemo"}),Object(c.b)("h2",null,Object(c.b)("span",null,"API"),Object(c.b)(P.a,{anchorId:"api",mdxType:"AnchorButton"})),Object(c.b)("p",null,"Learn more about the properties and the customization points."),Object(c.b)("h3",null,Object(c.b)("span",null,"Usage"),Object(c.b)(P.a,{anchorId:"usage",mdxType:"AnchorButton"})),Object(c.b)("pre",null,Object(c.b)("code",Y({parentName:"pre"},{className:"language-typescript"}),'// recommended\nimport Badge from "@sonnat/ui/Badge";\n\n//or\nimport { Badge } from "@sonnat/ui";\n')),Object(c.b)("h3",null,Object(c.b)("span",null,"Properties"),Object(c.b)(P.a,{anchorId:"properties",mdxType:"AnchorButton"})),Object(c.b)("p",null,"Note that the documentation avoids mentioning all the native props (there are a lot) in this section of the components."),Object(c.b)("table",{cols:4},Object(c.b)("caption",null,"Badge Properties"),Object(c.b)("thead",null,Object(c.b)("tr",null,Object(c.b)("th",null,"Name"),Object(c.b)("th",null,"Type"),Object(c.b)("th",null,"Default"),Object(c.b)("th",null,"Description"))),Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",null,"textContent"),Object(c.b)("td",null,"string"),Object(c.b)("td",null,"-"),Object(c.b)("td",null,"The content of the badge.")),Object(c.b)("tr",null,Object(c.b)("td",null,"className"),Object(c.b)("td",null,"string"),Object(c.b)("td",null,"-"),Object(c.b)("td",null,"Append to the class names applied to the component so you can override or extend the styles.")),Object(c.b)("tr",null,Object(c.b)("td",null,"children"),Object(c.b)("td",null,"node"),Object(c.b)("td",null,"-"),Object(c.b)("td",null,"If provided the badge will be wrapped around this node.")),Object(c.b)("tr",null,Object(c.b)("td",null,"parentProps"),Object(c.b)("td",null,"object"),Object(c.b)("td",null,"-"),Object(c.b)("td",null,"The props of the parent.",Object(c.b)("br",null),"If component has ",Object(c.b)("inlineCode",null,"children"),", this will be applied to the container of badge and the children element. Otherwise this will be applied to the badge itself.")),Object(c.b)("tr",null,Object(c.b)("td",null,"visable"),Object(c.b)("td",null,"boolean"),Object(c.b)("td",null,"true"),Object(c.b)("td",null,"If ",Object(c.b)("inlineCode",null,"true"),", the badge will be visable.")),Object(c.b)("tr",null,Object(c.b)("td",null,"dotSize"),Object(c.b)("td",null,'"small"',Object(c.b)("br",null),'| "medium"',Object(c.b)("br",null),'| "large"'),Object(c.b)("td",null,'"medium"'),Object(c.b)("td",null,"The size of the badge when ",Object(c.b)("inlineCode",null,'variant="dotted"'),".")),Object(c.b)("tr",null,Object(c.b)("td",null,"color"),Object(c.b)("td",null,'"primary"',Object(c.b)("br",null),'| "secondary"'),Object(c.b)("td",null,'"primary"'),Object(c.b)("td",null,"The color of the badge.")),Object(c.b)("tr",null,Object(c.b)("td",null,"variant"),Object(c.b)("td",null,'"filled"',Object(c.b)("br",null),'| "dotted"'),Object(c.b)("td",null,'"filled"'),Object(c.b)("td",null,"The variant of the badge.")),Object(c.b)("tr",null,Object(c.b)("td",null,"horizontalPosition"),Object(c.b)("td",null,'"left"',Object(c.b)("br",null),'| "right"'),Object(c.b)("td",null,'"left"'),Object(c.b)("td",null,"The horizontal position of the badge.")),Object(c.b)("tr",null,Object(c.b)("td",null,"verticalPosition"),Object(c.b)("td",null,'"top"',Object(c.b)("br",null),'| "bottom"'),Object(c.b)("td",null,'"top"'),Object(c.b)("td",null,"The vertical position of the badge.")),Object(c.b)("tr",null,Object(c.b)("td",null,"childShape"),Object(c.b)("td",null,'"rectangular"',Object(c.b)("br",null),'| "circular"'),Object(c.b)("td",null,'"rectangular"'),Object(c.b)("td",null,"The shape of the child the badge will be wrapped around.",Object(c.b)("br",null),"Set this for better positioning."))),Object(c.b)("tfoot",null,Object(c.b)("tr",null,Object(c.b)("td",{colSpan:"4"},Object(c.b)("ul",null,Object(c.b)("li",null,"The ",Object(c.b)("inlineCode",null,"ref")," is forwarded to the root element."),Object(c.b)("li",null,"Any other properties supplied will be provided to the root element.")))))))}Z.isMDXComponent=!0}},[["SlGq",0,1,2,3,4,5,6]]]);