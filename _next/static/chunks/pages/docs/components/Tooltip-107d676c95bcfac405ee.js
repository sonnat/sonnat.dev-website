_N_E=(window.webpackJsonp_N_E=window.webpackJsonp_N_E||[]).push([[17],{"1yTt":function(e,t,n){"use strict";n.r(t),n.d(t,"meta",(function(){return A})),n.d(t,"default",(function(){return R}));var l=n("cpVT"),o=n("z7pX"),c=n("dhJC"),b=n("q1tI"),i=n("7ljp"),r=n("s676"),a=n("PW80"),p=n("G0Pc"),u=n("XLwr"),d=n("nKUr"),s=n("xvhg"),j=n("Xswu"),O=n("eZlZ"),m=n("QzrO"),h=n("hrFB"),T=n("Bs6S"),v=n("UhvI"),x=n("TSYQ"),f=n.n(x),g=Object(O.a)((function(e){return{demoRow:{display:"flex","& + &":{marginTop:e.typography.pxToRem(40)}},placementControl:{alignItems:"center"}}}),{name:"TooltipPlacementDemo"}),y=function(){var e=g(),t=b.useState("top"),n=Object(s.a)(t,2),l=n[0],o=n[1],c='<Tooltip\n  text="The informative text!"\n  placement="'.concat(l,'"\n  open={true}\n  tailed\n>\n  <div>Placement (').concat(l,")</div>\n</Tooltip>");return Object(d.jsxs)(v.a,{code:c,flexDirection:"column",horizontalAlignment:"center",children:[Object(d.jsx)("div",{className:e.demoRow,children:Object(d.jsxs)(j.a,{className:f()(e.placementControl,"demoSubject"),children:[Object(d.jsx)(m.a,{htmlFor:"radiogroup-placement",children:"Placement"}),Object(d.jsxs)(h.a,{title:"Tooltip's placement",id:"radiogroup-placement",defaultValue:"left",layoutDirection:"row",onChange:function(e){o(e.target.value)},children:[Object(d.jsx)(T.a,{inputProps:{id:"radiogroup-placement-top"},label:"top",value:"top"}),Object(d.jsx)(T.a,{inputProps:{id:"radiogroup-placement-left"},label:"left",value:"left"}),Object(d.jsx)(T.a,{inputProps:{id:"radiogroup-placement-right"},label:"right",value:"right"}),Object(d.jsx)(T.a,{inputProps:{id:"radiogroup-placement-bottom"},label:"bottom",value:"bottom"})]})]})}),Object(d.jsx)("div",{className:e.demoRow,children:Object(d.jsx)(r.a,{text:"The informative text!",placement:l,tailed:!0,open:!0,children:Object(d.jsxs)("div",{children:["Placement (",l,")"]})})})]})};y.displayName="TooltipPlacementDemo";var w=y,C=function(){var e=b.useState(!1),t=Object(s.a)(e,2),n=t[0],l=t[1];return Object(d.jsx)(v.a,{code:'import Tooltip from "@sonnat/ui/Tooltip";\nimport * as React from "react";\n\nconst TooltipControllingDemo: React.FC = () => {\n  const [isOpen, setOpen] = React.useState(false);\n\n  return (\n    <React.Fragment>\n      <Tooltip text="The informative text!" defaultOpen={true}>\n        <small>uncontrolled</small>\n      </Tooltip>\n      <Tooltip\n        text="The informative text!"\n        open={isOpen}\n        onOpen={() => void setOpen(true)}\n        onClose={() => void setOpen(false)}\n      >\n        <small>controlled</small>\n      </Tooltip>\n    </React.Fragment>\n  );\n};\n\nexport default TooltipControllingDemo;',children:Object(d.jsxs)(b.Fragment,{children:[Object(d.jsx)("div",{className:"demoSubject",children:Object(d.jsx)(r.a,{text:"The informative text!",defaultOpen:!0,children:Object(d.jsx)("small",{children:"uncontrolled"})})}),Object(d.jsx)("div",{className:"demoSubject",children:Object(d.jsx)(r.a,{text:"The informative text!",open:n,onOpen:function(){l(!0)},onClose:function(){l(!1)},children:Object(d.jsx)("small",{children:"controlled"})})})]})})};C.displayName="TooltipControllingDemo";var P=C,D=n("g4pe"),B=n.n(D),I=n("C6zX"),k=n("cBaE");function N(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);t&&(l=l.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,l)}return n}function S(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?N(Object(n),!0).forEach((function(t){Object(l.a)(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):N(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}var A={title:"Tooltip",description:"Tooltips display informative text when users hover over, or tap an element.",layout:u.a},E={meta:A};function R(e){var t=e.components,n=Object(c.a)(e,["components"]);return Object(i.b)("wrapper",S(S(S({},E),n),{},{components:t,mdxType:"MDXLayout"}),Object(i.b)(B.a,{mdxType:"Head"},Object(k.e)("".concat(A.title," | Sonnat Developer Tools, React Components & Resources")),Object(k.c)(A.description),Object(k.b)("".concat(I.b,"/docs/components/").concat(A.title)),Object(k.d)([].concat(Object(o.a)(I.a),["tooltip","\u0631\u0627\u0647\u0646\u0645\u0627\u06cc \u0627\u0628\u0632\u0627\u0631"]))),Object(i.b)("h1",null,Object(i.b)("span",null,A.title),Object(i.b)(p.a,{anchorId:"overview",mdxType:"AnchorButton"}),Object(i.b)(a.a,{href:"pages/docs/components/".concat(A.title,".mdx"),mdxType:"PageEditButton"})),Object(i.b)("p",null,A.description),Object(i.b)("h2",null,Object(i.b)("span",null,"Triggers on Hover"),Object(i.b)(p.a,{anchorId:"triggers-on-hover",mdxType:"AnchorButton"})),Object(i.b)("p",null,"Displays the tooltip when users hover over the anchor element. This behaviour is the default behaviour of the tooltips."),Object(i.b)(v.a,{code:'<Tooltip text="The informative text!">\n  <div>Hover me!</div>\n</Tooltip>',mdxType:"DemoBox"},Object(i.b)(r.a,{text:"The informative text!",mdxType:"Tooltip"},Object(i.b)("div",null,"Hover me!"))),Object(i.b)("h2",null,Object(i.b)("span",null,"Triggers on Click"),Object(i.b)(p.a,{anchorId:"triggers-on-click",mdxType:"AnchorButton"})),Object(i.b)("p",null,"Displays the tooltip when users click on the anchor element."),Object(i.b)(v.a,{code:'<Tooltip text="The informative text!" triggersOn="click">\n  <div>Click me!</div>\n</Tooltip>',mdxType:"DemoBox"},Object(i.b)(r.a,{text:"The informative text!",triggersOn:"click",mdxType:"Tooltip"},Object(i.b)("div",null,"Click me!"))),Object(i.b)("h2",null,Object(i.b)("span",null,"Triggers on MouseMove"),Object(i.b)(p.a,{anchorId:"triggers-on-mousemove",mdxType:"AnchorButton"})),Object(i.b)("p",null,"When mouse enters the anchor element, the tooltip will be displayed and follows the cursor."),Object(i.b)(v.a,{code:'<Tooltip text="The informative text!" triggersOn="mouseMove">\n  <div>Tickle me!</div>\n</Tooltip>',mdxType:"DemoBox"},Object(i.b)(r.a,{text:"The informative text!",triggersOn:"mouseMove",mdxType:"Tooltip"},Object(i.b)("div",{id:"tickle-anchor"},"Tickle me!"))),Object(i.b)("h2",null,Object(i.b)("span",null,"Arrow Tails"),Object(i.b)(p.a,{anchorId:"arrow-tails",mdxType:"AnchorButton"})),Object(i.b)("p",null,"You can use the ",Object(i.b)("inlineCode",null,"tailed")," property to give your tooltip an arrow tail indicating which element it refers to."),Object(i.b)(v.a,{code:'<Tooltip text="The informative text!" tailed>\n  <div>Tailed tooltip!</div>\n</Tooltip>',mdxType:"DemoBox"},Object(i.b)(r.a,{text:"The informative text!",tailed:!0,mdxType:"Tooltip"},Object(i.b)("div",null,"Tailed tooltip!"))),Object(i.b)("h2",null,Object(i.b)("span",null,"Controlled Tooltips"),Object(i.b)(p.a,{anchorId:"controlled-tooltips",mdxType:"AnchorButton"})),Object(i.b)("p",null,"You can use the ",Object(i.b)("inlineCode",null,"open"),", ",Object(i.b)("inlineCode",null,"onOpen")," ","and ",Object(i.b)("inlineCode",null,"onClose")," properties to control the behaviour of the tooltip."),Object(i.b)(P,{mdxType:"TooltipControllingDemo"}),Object(i.b)("h2",null,Object(i.b)("span",null,"Placement"),Object(i.b)(p.a,{anchorId:"placement",mdxType:"AnchorButton"})),Object(i.b)("p",null,"You can use ",Object(i.b)("inlineCode",null,"placement")," property to change the tooltip's placement."),Object(i.b)(w,{mdxType:"TooltipPlacementDemo"}),Object(i.b)("h2",null,Object(i.b)("span",null,"API"),Object(i.b)(p.a,{anchorId:"api",mdxType:"AnchorButton"})),Object(i.b)("p",null,"Learn more about the properties and the customization points."),Object(i.b)("h3",null,Object(i.b)("span",null,"Usage"),Object(i.b)(p.a,{anchorId:"usage",mdxType:"AnchorButton"})),Object(i.b)("pre",null,Object(i.b)("code",S({parentName:"pre"},{className:"language-typescript"}),'// recommended\nimport Tooltip from "@sonnat/ui/Tooltip";\n\n//or\nimport { Tooltip } from "@sonnat/ui";\n')),Object(i.b)("h3",null,Object(i.b)("span",null,"Properties"),Object(i.b)(p.a,{anchorId:"properties",mdxType:"AnchorButton"})),Object(i.b)("p",null,"Note that the documentation avoids mentioning all the native props (there are a lot) in this section of the components."),Object(i.b)("table",{cols:4},Object(i.b)("caption",null,"Tooltip Properties"),Object(i.b)("thead",null,Object(i.b)("tr",null,Object(i.b)("th",null,"Name"),Object(i.b)("th",null,"Type"),Object(i.b)("th",null,"Default"),Object(i.b)("th",null,"Description"))),Object(i.b)("tbody",null,Object(i.b)("tr",null,Object(i.b)("td",null,"children"),Object(i.b)("td",null,"node"),Object(i.b)("td",null,"-"),Object(i.b)("td",null,"The target element. This element works as an anchor for the tooltip.")),Object(i.b)("tr",null,Object(i.b)("td",null,"className"),Object(i.b)("td",null,"string"),Object(i.b)("td",null,"-"),Object(i.b)("td",null,"Append to the class names applied to the component so you can override or extend the styles.")),Object(i.b)("tr",null,Object(i.b)("td",null,"text"),Object(i.b)("td",null,"string"),Object(i.b)("td",null,"-"),Object(i.b)("td",null,"The text content of the tooltip.")),Object(i.b)("tr",null,Object(i.b)("td",null,"placement"),Object(i.b)("td",null,'"left"',Object(i.b)("br",null),'| "right"',Object(i.b)("br",null),'| "top"',Object(i.b)("br",null),'| "bottom"'),Object(i.b)("td",null,"-"),Object(i.b)("td",null,"The tooltip's placement. It will be auto updated when it collide with the window.")),Object(i.b)("tr",null,Object(i.b)("td",null,"triggersOn"),Object(i.b)("td",null,'"click"',Object(i.b)("br",null),'| "hover"',Object(i.b)("br",null),'| "mouseMove"'),Object(i.b)("td",null,"-"),Object(i.b)("td",null,"The source of the event that will trigger the tooltip.")),Object(i.b)("tr",null,Object(i.b)("td",null,"tailed"),Object(i.b)("td",null,"boolean"),Object(i.b)("td",null,"false"),Object(i.b)("td",null,"If ",Object(i.b)("inlineCode",null,"true"),", the tooltip will have an arrow tail.")),Object(i.b)("tr",null,Object(i.b)("td",null,"open"),Object(i.b)("td",null,"boolean"),Object(i.b)("td",null,"-"),Object(i.b)("td",null,"If ",Object(i.b)("inlineCode",null,"true"),", the tooltip will be open.")),Object(i.b)("tr",null,Object(i.b)("td",null,"defaultOpen"),Object(i.b)("td",null,"boolean"),Object(i.b)("td",null,"-"),Object(i.b)("td",null,"If ",Object(i.b)("inlineCode",null,"true"),", the tooltip will be open on mount. Use when the component is not controlled.")),Object(i.b)("tr",null,Object(i.b)("td",null,"onOpen"),Object(i.b)("td",null,"function"),Object(i.b)("td",null,"-"),Object(i.b)("td",null,"The Callback fires when the component requests to be opened.",Object(i.b)("br",null),Object(i.b)("em",null,Object(i.b)("strong",null,"Signature:"))," ",Object(i.b)("inlineCode",null,"function(event: React.SyntheticEvent | Event) => void"))),Object(i.b)("tr",null,Object(i.b)("td",null,"onClose"),Object(i.b)("td",null,"function"),Object(i.b)("td",null,"-"),Object(i.b)("td",null,"The Callback fires when the component requests to be closed.",Object(i.b)("br",null),Object(i.b)("em",null,Object(i.b)("strong",null,"Signature:"))," ",Object(i.b)("inlineCode",null,"function(event: React.SyntheticEvent | Event) => void")))),Object(i.b)("tfoot",null,Object(i.b)("tr",null,Object(i.b)("td",{colSpan:"4"},Object(i.b)("ul",null,Object(i.b)("li",null,"The ",Object(i.b)("inlineCode",null,"ref")," is forwarded to the root element."),Object(i.b)("li",null,"Any other properties supplied will be provided to the root element.")))))))}R.isMDXComponent=!0},wplH:function(e,t,n){(window.__NEXT_P=window.__NEXT_P||[]).push(["/docs/components/Tooltip",function(){return n("1yTt")}])}},[["wplH",0,1,2,3,4,5,6]]]);