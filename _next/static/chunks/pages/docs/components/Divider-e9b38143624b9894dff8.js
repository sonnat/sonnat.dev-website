(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[3731],{6201:function(t,e,n){"use strict";n.r(e),n.d(e,{meta:function(){return v},default:function(){return y}});var l=n(6265),o=n(8140),r=n(8347),i=(n(7294),n(3905)),a=n(8286),d=n(7703),u=n(9387),c=n(3161),s=n(3910),p=n(9008),k=n(3257),m=n(1919);function h(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(t);e&&(l=l.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,l)}return n}function f(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?h(Object(n),!0).forEach((function(e){(0,l.Z)(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):h(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}var v={title:"Divider",description:"A divider is a line or any sort of element that seperates different content.",getLayout:function(){return function(t){return(0,i.kt)(c.Z,{mdxType:"WithSidebar"},t)}}},b={meta:v};function y(t){var e=t.components,n=(0,r.Z)(t,["components"]);return(0,i.kt)("wrapper",f(f(f({},b),n),{},{components:e,mdxType:"MDXLayout"}),(0,i.kt)(p.default,{mdxType:"Head"},(0,m.aT)("".concat(v.title," | Sonnat Developer Tools, React Components & Resources")),(0,m.u2)(v.description),(0,m.ai)("".concat(k.z,"/docs/components/").concat(v.title)),(0,m.hL)([].concat((0,o.Z)(k.t),["divider","\u062c\u062f\u0627\u06a9\u0646\u0646\u062f\u0647"]))),(0,i.kt)("h1",null,(0,i.kt)("span",null,v.title),(0,i.kt)(u.Z,{anchorId:"overview",mdxType:"AnchorButton"}),(0,i.kt)(d.Z,{href:"pages/docs/components/".concat(v.title,".mdx"),mdxType:"PageEditButton"})),(0,i.kt)("p",null,v.description),(0,i.kt)("h2",null,(0,i.kt)("span",null,"Horizontal Dividers"),(0,i.kt)(u.Z,{anchorId:"horizontal-dividers",mdxType:"AnchorButton"})),(0,i.kt)("p",null,"Dividers are horizontal by default."),(0,i.kt)(s.Z,{code:"<Divider />",mdxType:"DemoBox"},(0,i.kt)("small",{className:"demoSubject"},"Content before"),(0,i.kt)(a.Z,{mdxType:"Divider"}),(0,i.kt)("small",{className:"demoSubject"},"Content after")),(0,i.kt)("p",null,"Horizontal dividers offer an alternative style. You can achieve a dotted version of divider with the use of the ",(0,i.kt)("inlineCode",null,"dotted")," ","property."),(0,i.kt)(s.Z,{flexDirection:"column",code:"<Divider dotted />",mdxType:"DemoBox"},(0,i.kt)("small",{className:"demoSubject"},"Content before"),(0,i.kt)(a.Z,{dotted:!0,mdxType:"Divider"}),(0,i.kt)("small",{className:"demoSubject"},"Content after")),(0,i.kt)("h2",null,(0,i.kt)("span",null,"Vertical Dividers"),(0,i.kt)(u.Z,{anchorId:"vertical-dividers",mdxType:"AnchorButton"})),(0,i.kt)("p",null,"You can also render a divider vertically using the"," ",(0,i.kt)("inlineCode",null,"vertical")," prop. Note that the parent of the vertical divider should be a flex container."),(0,i.kt)(s.Z,{code:"<Divider vertical />",mdxType:"DemoBox"},(0,i.kt)("small",{className:"demoSubject"},"Content before"),(0,i.kt)(a.Z,{vertical:!0,mdxType:"Divider"}),(0,i.kt)("small",{className:"demoSubject"},"Content after")),(0,i.kt)("h2",null,(0,i.kt)("span",null,"API"),(0,i.kt)(u.Z,{anchorId:"api",mdxType:"AnchorButton"})),(0,i.kt)("p",null,"Learn more about the properties and the customization points."),(0,i.kt)("h3",null,(0,i.kt)("span",null,"Usage"),(0,i.kt)(u.Z,{anchorId:"usage",mdxType:"AnchorButton"})),(0,i.kt)("pre",null,(0,i.kt)("code",f({parentName:"pre"},{className:"language-typescript"}),'// recommended\nimport Divider from "@sonnat/ui/Divider";\n\n//or\nimport { Divider } from "@sonnat/ui";\n')),(0,i.kt)("h3",null,(0,i.kt)("span",null,"Properties"),(0,i.kt)(u.Z,{anchorId:"properties",mdxType:"AnchorButton"})),(0,i.kt)("p",null,"Note that the documentation avoids mentioning all the native props (there are a lot) in this section of the components."),(0,i.kt)("table",{cols:4},(0,i.kt)("caption",null,"Divider Properties"),(0,i.kt)("thead",null,(0,i.kt)("tr",null,(0,i.kt)("th",null,"Name"),(0,i.kt)("th",null,"Type"),(0,i.kt)("th",null,"Default"),(0,i.kt)("th",null,"Description"))),(0,i.kt)("tbody",null,(0,i.kt)("tr",null,(0,i.kt)("td",null,"className"),(0,i.kt)("td",null,"string"),(0,i.kt)("td",null,"-"),(0,i.kt)("td",null,"Append to the class names applied to the component so you can override or extend the styles.")),(0,i.kt)("tr",null,(0,i.kt)("td",null,"spaced"),(0,i.kt)("td",null,"boolean"),(0,i.kt)("td",null,"false"),(0,i.kt)("td",null,"If ",(0,i.kt)("inlineCode",null,"true"),", the divider will have spaces around it.")),(0,i.kt)("tr",null,(0,i.kt)("td",null,"dotted"),(0,i.kt)("td",null,"boolean"),(0,i.kt)("td",null,"false"),(0,i.kt)("td",null,"If ",(0,i.kt)("inlineCode",null,"true"),", the divider will be rendered as 3-dots instead of a straight line.",(0,i.kt)("br",null),"You can't use it along with ",(0,i.kt)("inlineCode",null,"vertical"),"!")),(0,i.kt)("tr",null,(0,i.kt)("td",null,"vertical"),(0,i.kt)("td",null,"boolean"),(0,i.kt)("td",null,"false"),(0,i.kt)("td",null,"If ",(0,i.kt)("inlineCode",null,"true"),", the divider will be vertical.",(0,i.kt)("br",null),"It only works in flexboxes! (the parent should be a flex container)"))),(0,i.kt)("tfoot",null,(0,i.kt)("tr",null,(0,i.kt)("td",{colSpan:"4"},(0,i.kt)("ul",null,(0,i.kt)("li",null,"The ",(0,i.kt)("inlineCode",null,"ref")," is forwarded to the root element."),(0,i.kt)("li",null,"Any other properties supplied will be provided to the root element.")))))))}y.isMDXComponent=!0},6628:function(t,e,n){(window.__NEXT_P=window.__NEXT_P||[]).push(["/docs/components/Divider",function(){return n(6201)}])},9762:function(t,e,n){"use strict";n.d(e,{Z:function(){return a}});var l=n(7707),o=n(9391),r=n(355),i=n(5678);function a(t){return(0,l.Z)(t)||(0,o.Z)(t)||(0,r.Z)(t)||(0,i.Z)()}}},function(t){t.O(0,[9774,3679,1161,6156,320,2652,1635,9481,9701],(function(){return e=6628,t(t.s=e);var e}));var e=t.O();_N_E=e}]);