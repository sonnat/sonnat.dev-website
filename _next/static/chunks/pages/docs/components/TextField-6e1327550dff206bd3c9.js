(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[5710],{2340:function(t,e,l){"use strict";l.r(e),l.d(e,{default:function(){return I},meta:function(){return Z}});var n=l(6265),d=l(8140),u=l(8347),a=l(7294),o=l(3905),r=l(2981),i=l(2943),k=l(6598),p=l(7703),s=l(9387),c=l(3161),h=l(5893),m=l(2292),f=l(3910),x=function(){var t=a.useState(""),e=(0,m.Z)(t,2),l=e[0],n=e[1];return(0,h.jsx)(f.Z,{flexDirection:"column",code:'import TextField from "@sonnat/ui/TextField";\nimport * as React from "react";\n\nconst Demo: React.FC = () => {\n  const [value, setValue] = React.useState("");\n\n  return (\n    <React.Fragment>\n      <TextField\n        value={value}\n        onChange={e => void setValue(e.target.value)}\n        legendLabel="Label"\n      />\n      <span>The value is {`"${value}"`}</span>\n    </React.Fragment>\n  );\n};\n\nexport default Demo;\n',children:(0,h.jsxs)(a.Fragment,{children:[(0,h.jsx)(r.Z,{value:l,onChange:function(t){n(t.target.value)},legendLabel:"Label"}),(0,h.jsxs)("span",{style:{marginTop:16,whiteSpace:"pre-wrap",textAlign:"center"},children:["The value is",(0,h.jsx)("br",{}),(0,h.jsx)("strong",{style:{paddingTop:8,display:"inline-block"},children:'"'.concat(l,'"')})]})]})})};x.displayName="TextFieldControlledDemo";var T=x,b=l(9008),y=l(3257),g=l(1919);function v(t,e){var l=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),l.push.apply(l,n)}return l}function F(t){for(var e=1;e<arguments.length;e++){var l=null!=arguments[e]?arguments[e]:{};e%2?v(Object(l),!0).forEach((function(e){(0,n.Z)(t,e,l[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(l)):v(Object(l)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(l,e))}))}return t}var Z={title:"TextField",description:"TextFields allow users enter and edit text inputs.",getLayout:function(){return function(t){return(0,o.kt)(c.Z,{mdxType:"WithSidebar"},t)}}},w={meta:Z};function I(t){var e=t.components,l=(0,u.Z)(t,["components"]);return(0,o.kt)("wrapper",F(F(F({},w),l),{},{components:e,mdxType:"MDXLayout"}),(0,o.kt)(b.default,{mdxType:"Head"},(0,g.aT)("".concat(Z.title," | Sonnat Developer Tools, React Components & Resources")),(0,g.u2)(Z.description),(0,g.ai)("".concat(y.z,"/docs/components/").concat(Z.title)),(0,g.hL)([].concat((0,d.Z)(y.t),["textarea"]))),(0,o.kt)("h1",null,(0,o.kt)("span",null,Z.title),(0,o.kt)(s.Z,{anchorId:"overview",mdxType:"AnchorButton"}),(0,o.kt)(p.Z,{href:"pages/docs/components/".concat(Z.title,".mdx"),mdxType:"PageEditButton"})),(0,o.kt)("p",null,Z.description),(0,o.kt)("h2",null,(0,o.kt)("span",null,"Simple TextFields"),(0,o.kt)(s.Z,{anchorId:"simple-textfields",mdxType:"AnchorButton"})),(0,o.kt)(f.Z,{flexDirection:"column",horizontalAlignment:"start",code:'<TextField\n  name="input"\n  placeholder="Placeholder"\n  fluid\n/>\n<TextField\n  name="input"\n  placeholder="read-only"\n  readOnly\n  fluid\n/>\n<TextField\n  name="input"\n  placeholder="read-only"\n  readOnly\n  defaultValue="Default value + read-only"\n  fluid\n/>\n<TextField\n  name="input"\n  placeholder="read-only"\n  defaultValue="Default value + disabled"\n  disabled\n  fluid\n/>\n<TextField\n  name="input"\n  placeholder="read-only and disabled"\n  readOnly\n  disabled\n  fluid\n/>\n<TextField\n  name="input"\n  placeholder="read-only and disabled | with default value"\n  defaultValue="Default value + disabled + read-only"\n  readOnly\n  disabled\n  fluid\n/>\n<TextField\n  name="input"\n  placeholder="Rounded"\n  fluid\n  rounded\n/>\n<TextField\n  name="input"\n  placeholder="Has Error"\n  fluid\n  hasError\n/>\n<TextField\n  name="input"\n  placeholder="With helper text"\n  fluid\n  helperText="This is an informative helper text."\n/>',mdxType:"DemoBox"},(0,o.kt)(r.Z,{name:"input",placeholder:"Placeholder",fluid:!0,className:"demoSubject",mdxType:"TextField"}),(0,o.kt)(r.Z,{name:"input",placeholder:"read-only",readOnly:!0,fluid:!0,className:"demoSubject",mdxType:"TextField"}),(0,o.kt)(r.Z,{name:"input",placeholder:"read-only",readOnly:!0,defaultValue:"Default value + read-only",fluid:!0,className:"demoSubject",mdxType:"TextField"}),(0,o.kt)(r.Z,{name:"input",placeholder:"read-only",defaultValue:"Default value + disabled",disabled:!0,fluid:!0,className:"demoSubject",mdxType:"TextField"}),(0,o.kt)(r.Z,{name:"input",placeholder:"read-only and disabled",readOnly:!0,disabled:!0,fluid:!0,className:"demoSubject",mdxType:"TextField"}),(0,o.kt)(r.Z,{name:"input",placeholder:"read-only and disabled | with default value",defaultValue:"Default value + disabled + read-only",readOnly:!0,disabled:!0,fluid:!0,className:"demoSubject",mdxType:"TextField"}),(0,o.kt)(r.Z,{name:"input",placeholder:"Rounded",fluid:!0,rounded:!0,className:"demoSubject",mdxType:"TextField"}),(0,o.kt)(r.Z,{name:"input",placeholder:"Has Error",fluid:!0,hasError:!0,className:"demoSubject",mdxType:"TextField"}),(0,o.kt)(r.Z,{name:"input",placeholder:"With helper text",fluid:!0,helperText:"This is an informative helper text.",className:"demoSubject",mdxType:"TextField"})),(0,o.kt)("h2",null,(0,o.kt)("span",null,"Legend-Labeled TextFields"),(0,o.kt)(s.Z,{anchorId:"legend-labeled-textfields",mdxType:"AnchorButton"})),(0,o.kt)("p",null,"Works as an alternative behaviour for the text fields. It's good for standalone text fields."),(0,o.kt)(f.Z,{code:'<TextField legendLabel="Label" name="input" placeholder="Placeholder" fluid />',mdxType:"DemoBox"},(0,o.kt)(r.Z,{legendLabel:"Label",name:"input",placeholder:"Placeholder",fluid:!0,mdxType:"TextField"})),(0,o.kt)("h2",null,(0,o.kt)("span",null,"With ",(0,o.kt)("mark",null,"InputAdornment"),"s"),(0,o.kt)(s.Z,{anchorId:"with-inputadornments",mdxType:"AnchorButton"})),(0,o.kt)("p",null,"The"," ",(0,o.kt)("a",{href:"/docs/components/InputAdornment",title:"InputAdornment documentation"},"InputAdornment")," ","can be used to add a prefix, a suffix, an action, or an icon to an input."),(0,o.kt)(f.Z,{code:'<TextField\n  leadingAdornment={\n    <InputAdornment variant="icon">\n      <Icon identifier="heart" />\n    </InputAdornment>\n  }\n  trailingAdornment={<InputAdornment variant="text">KG</InputAdornment>}\n  name="input"\n  placeholder="Placeholder"\n  fluid\n/>',mdxType:"DemoBox"},(0,o.kt)(r.Z,{leadingAdornment:(0,o.kt)(i.Z,{variant:"icon",mdxType:"InputAdornment"},(0,o.kt)(k.Z,{identifier:"heart",mdxType:"Icon"})),trailingAdornment:(0,o.kt)(i.Z,{variant:"text",mdxType:"InputAdornment"},"KG"),name:"input",placeholder:"Placeholder",fluid:!0,mdxType:"TextField"})),(0,o.kt)("h2",null,(0,o.kt)("span",null,"Controlled TextField"),(0,o.kt)(s.Z,{anchorId:"controlled-textfield",mdxType:"AnchorButton"})),(0,o.kt)("p",null,"You can use the ",(0,o.kt)("inlineCode",null,"value"),", and"," ",(0,o.kt)("inlineCode",null,"onChange")," properties to control the behaviour of the text field."),(0,o.kt)(T,{mdxType:"TextFieldControlledDemo"}),(0,o.kt)("h2",null,(0,o.kt)("span",null,"API"),(0,o.kt)(s.Z,{anchorId:"api",mdxType:"AnchorButton"})),(0,o.kt)("p",null,"Learn more about the properties and the customization points."),(0,o.kt)("h3",null,(0,o.kt)("span",null,"Usage"),(0,o.kt)(s.Z,{anchorId:"usage",mdxType:"AnchorButton"})),(0,o.kt)("pre",null,(0,o.kt)("code",F({parentName:"pre"},{className:"language-typescript"}),'// recommended\nimport TextField from "@sonnat/ui/TextField";\n\n//or\nimport { TextField } from "@sonnat/ui";\n')),(0,o.kt)("h3",null,(0,o.kt)("span",null,"Properties"),(0,o.kt)(s.Z,{anchorId:"properties",mdxType:"AnchorButton"})),(0,o.kt)("p",null,"Note that the documentation avoids mentioning all the native props (there are a lot) in this section of the components."),(0,o.kt)("table",{cols:4},(0,o.kt)("caption",null,"TextField Properties"),(0,o.kt)("thead",null,(0,o.kt)("tr",null,(0,o.kt)("th",null,"Name"),(0,o.kt)("th",null,"Type"),(0,o.kt)("th",null,"Default"),(0,o.kt)("th",null,"Description"))),(0,o.kt)("tbody",null,(0,o.kt)("tr",null,(0,o.kt)("td",null,"className"),(0,o.kt)("td",null,"string"),(0,o.kt)("td",null,"-"),(0,o.kt)("td",null,"Append to the class names applied to the component so you can override or extend the styles.")),(0,o.kt)("tr",null,(0,o.kt)("td",null,"name"),(0,o.kt)("td",null,"string"),(0,o.kt)("td",null,"-"),(0,o.kt)("td",null,"The name of the text field.")),(0,o.kt)("tr",null,(0,o.kt)("td",null,"legendLabel"),(0,o.kt)("td",null,"string"),(0,o.kt)("td",null,"-"),(0,o.kt)("td",null,"The text of the label in legend style.")),(0,o.kt)("tr",null,(0,o.kt)("td",null,"placeholder"),(0,o.kt)("td",null,"string"),(0,o.kt)("td",null,"-"),(0,o.kt)("td",null,"The ",(0,o.kt)("inlineCode",null,"placeholder")," property of the text field.")),(0,o.kt)("tr",null,(0,o.kt)("td",null,"value"),(0,o.kt)("td",null,"string"),(0,o.kt)("td",null,"-"),(0,o.kt)("td",null,"The value of the text field. The DOM API casts this to a string.")),(0,o.kt)("tr",null,(0,o.kt)("td",null,"defaultValue"),(0,o.kt)("td",null,"string"),(0,o.kt)("td",null,"-"),(0,o.kt)("td",null,"The default value. Use when the component is not controlled.")),(0,o.kt)("tr",null,(0,o.kt)("td",null,"helperText"),(0,o.kt)("td",null,"string"),(0,o.kt)("td",null,"-"),(0,o.kt)("td",null,"The helper text content.")),(0,o.kt)("tr",null,(0,o.kt)("td",null,"helperIcon"),(0,o.kt)("td",null,"node"),(0,o.kt)("td",null,"-"),(0,o.kt)("td",null,"The helper icon.")),(0,o.kt)("tr",null,(0,o.kt)("td",null,"size"),(0,o.kt)("td",null,'"medium"',(0,o.kt)("br",null),'| "small"'),(0,o.kt)("td",null,'"medium"'),(0,o.kt)("td",null,"The size of the form controller.")),(0,o.kt)("tr",null,(0,o.kt)("td",null,"variant"),(0,o.kt)("td",null,'"filled"',(0,o.kt)("br",null),'| "outlined"'),(0,o.kt)("td",null,'"outlined"'),(0,o.kt)("td",null,"The variant of the text field.")),(0,o.kt)("tr",null,(0,o.kt)("td",null,"type"),(0,o.kt)("td",null,'"text"',(0,o.kt)("br",null),'| "email"',(0,o.kt)("br",null),'| "password"'),(0,o.kt)("td",null,'"text"'),(0,o.kt)("td",null,"The type of the input.")),(0,o.kt)("tr",null,(0,o.kt)("td",null,"leadingAdornment"),(0,o.kt)("td",null,"node"),(0,o.kt)("td",null,"-"),(0,o.kt)("td",null,"The leading adornment for this component.",(0,o.kt)("br",null),"This can be used to add a prefix, an action, or an icon to the leading of your input.")),(0,o.kt)("tr",null,(0,o.kt)("td",null,"trailingAdornment"),(0,o.kt)("td",null,"node"),(0,o.kt)("td",null,"-"),(0,o.kt)("td",null,"The trailing adornment for this component.",(0,o.kt)("br",null),"This can be used to add a suffix, an action, or an icon to the trailing of your input.")),(0,o.kt)("tr",null,(0,o.kt)("td",null,"rounded"),(0,o.kt)("td",null,"boolean"),(0,o.kt)("td",null,"false"),(0,o.kt)("td",null,"If ",(0,o.kt)("inlineCode",null,"true"),", the text field will be rounded.")),(0,o.kt)("tr",null,(0,o.kt)("td",null,"disabled"),(0,o.kt)("td",null,"boolean"),(0,o.kt)("td",null,"false"),(0,o.kt)("td",null,"If ",(0,o.kt)("inlineCode",null,"true"),", the text field will be disabled.")),(0,o.kt)("tr",null,(0,o.kt)("td",null,"readOnly"),(0,o.kt)("td",null,"boolean"),(0,o.kt)("td",null,"false"),(0,o.kt)("td",null,"If ",(0,o.kt)("inlineCode",null,"true"),", the text field will be readOnly.")),(0,o.kt)("tr",null,(0,o.kt)("td",null,"focused"),(0,o.kt)("td",null,"boolean"),(0,o.kt)("td",null,"false"),(0,o.kt)("td",null,"If ",(0,o.kt)("inlineCode",null,"true"),", the text field will be focused.")),(0,o.kt)("tr",null,(0,o.kt)("td",null,"autoFocus"),(0,o.kt)("td",null,"boolean"),(0,o.kt)("td",null,"false"),(0,o.kt)("td",null,"If ",(0,o.kt)("inlineCode",null,"true"),", the text field will be focused on mount.")),(0,o.kt)("tr",null,(0,o.kt)("td",null,"required"),(0,o.kt)("td",null,"boolean"),(0,o.kt)("td",null,"false"),(0,o.kt)("td",null,"If ",(0,o.kt)("inlineCode",null,"true"),", the text field will be required.")),(0,o.kt)("tr",null,(0,o.kt)("td",null,"hasError"),(0,o.kt)("td",null,"boolean"),(0,o.kt)("td",null,"false"),(0,o.kt)("td",null,"If ",(0,o.kt)("inlineCode",null,"true"),", the text field will indicate invalid input.")),(0,o.kt)("tr",null,(0,o.kt)("td",null,"fluid"),(0,o.kt)("td",null,"boolean"),(0,o.kt)("td",null,"false"),(0,o.kt)("td",null,"If ",(0,o.kt)("inlineCode",null,"true"),", the text field will be fluid (max-width: 100%)")),(0,o.kt)("tr",null,(0,o.kt)("td",null,"inputProps"),(0,o.kt)("td",null,"object"),(0,o.kt)("td",null,"-"),(0,o.kt)("td",null,"The properties applied to the ",(0,o.kt)("inlineCode",null,"input")," element.")),(0,o.kt)("tr",null,(0,o.kt)("td",null,"onChange"),(0,o.kt)("td",null,"function"),(0,o.kt)("td",null,"-"),(0,o.kt)("td",null,"The Callback fires when the state has changed.",(0,o.kt)("br",null),(0,o.kt)("em",null,(0,o.kt)("strong",null,"Signature:"))," ",(0,o.kt)("inlineCode",null,"function(event: React.ChangeEvent, value: string) => void"),(0,o.kt)("br",null),(0,o.kt)("em",null,(0,o.kt)("strong",null,"Note:"))," ","You can also pull out the current value by accessing"," ",(0,o.kt)("inlineCode",null,"event.target.value")," (string)."))),(0,o.kt)("tfoot",null,(0,o.kt)("tr",null,(0,o.kt)("td",{colSpan:"4"},(0,o.kt)("ul",null,(0,o.kt)("li",null,"The ",(0,o.kt)("inlineCode",null,"ref")," is forwarded to the root element."),(0,o.kt)("li",null,"Any other properties supplied will be provided to the root element.")))))))}I.isMDXComponent=!0},4817:function(t,e,l){(window.__NEXT_P=window.__NEXT_P||[]).push(["/docs/components/TextField",function(){return l(2340)}])},9762:function(t,e,l){"use strict";l.d(e,{Z:function(){return o}});var n=l(7707),d=l(9391),u=l(355),a=l(5678);function o(t){return(0,n.Z)(t)||(0,d.Z)(t)||(0,u.Z)(t)||(0,a.Z)()}}},function(t){t.O(0,[9774,3679,1161,6156,320,2652,1635,9481,9701],(function(){return e=4817,t(t.s=e);var e}));var e=t.O();_N_E=e}]);